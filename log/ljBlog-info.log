2025-01-22 09:33:05,348 INFO  [SpringApplicationShutdownHook] c.a.d.p.DruidDataSource.(): {dataSource-1} closing ...
2025-01-22 09:33:05,348 INFO  [SpringApplicationShutdownHook] c.a.d.p.DruidDataSource.(): {dataSource-1} closed
2025-01-22 09:33:12,771 INFO  [main] c.l.b.BlogApplication.(): Starting BlogApplication using Java 17.0.5 with PID 28768 (G:\SpringBootProduct\Blog\lj-blog-starter\target\classes started by PC in G:\SpringBootProduct\Blog)
2025-01-22 09:33:12,777 INFO  [main] c.l.b.BlogApplication.(): No active profile set, falling back to 1 default profile: "default"
2025-01-22 09:33:13,242 INFO  [main] o.s.d.r.c.RepositoryConfigurationDelegate.(): Multiple Spring Data modules found, entering strict repository configuration mode
2025-01-22 09:33:13,247 INFO  [main] o.s.d.r.c.RepositoryConfigurationDelegate.(): Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-01-22 09:33:13,278 INFO  [main] o.s.d.r.c.RepositoryConfigurationDelegate.(): Finished Spring Data repository scanning in 19 ms. Found 0 Redis repository interfaces.
2025-01-22 09:33:13,706 INFO  [main] o.s.b.w.e.t.TomcatWebServer.(): Tomcat initialized with port 8085 (http)
2025-01-22 09:33:13,717 INFO  [main] o.a.c.h.Http11NioProtocol.(): Initializing ProtocolHandler ["http-nio-8085"]
2025-01-22 09:33:13,722 INFO  [main] o.a.c.c.StandardService.(): Starting service [Tomcat]
2025-01-22 09:33:13,722 INFO  [main] o.a.c.c.StandardEngine.(): Starting Servlet engine: [Apache Tomcat/10.1.31]
2025-01-22 09:33:13,792 INFO  [main] o.a.c.c.C.[.[.[/].(): Initializing Spring embedded WebApplicationContext
2025-01-22 09:33:13,793 INFO  [main] o.s.b.w.s.c.ServletWebServerApplicationContext.(): Root WebApplicationContext: initialization completed in 986 ms
2025-01-22 09:33:15,216 INFO  [main] o.s.b.a.w.s.WelcomePageHandlerMapping.(): Adding welcome page template: index
2025-01-22 09:33:16,470 INFO  [main] o.a.c.h.Http11NioProtocol.(): Starting ProtocolHandler ["http-nio-8085"]
2025-01-22 09:33:16,484 INFO  [main] o.s.b.w.e.t.TomcatWebServer.(): Tomcat started on port 8085 (http) with context path '/'
2025-01-22 09:33:16,491 INFO  [main] c.l.b.BlogApplication.(): Started BlogApplication in 4.029 seconds (process running for 6.776)
2025-01-22 09:36:50,210 INFO  [http-nio-8085-exec-1] o.a.c.c.C.[.[.[/].(): Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-01-22 09:36:50,210 INFO  [http-nio-8085-exec-1] o.s.w.s.DispatcherServlet.(): Initializing Servlet 'dispatcherServlet'
2025-01-22 09:36:50,211 INFO  [http-nio-8085-exec-1] o.s.w.s.DispatcherServlet.(): Completed initialization in 1 ms
2025-01-22 09:36:50,223 ERROR [http-nio-8085-exec-1] c.l.b.c.e.GlobalException.(): [91m系统没有该接口 org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' is not supported Request method 'POST' is not supported[0m
2025-01-22 09:36:50,253 WARN  [http-nio-8085-exec-1] c.l.b.a.c.i.StatisticsAccessInterfaceTime.(): [93m没有到获取时间的拦截器[0m
2025-01-22 09:36:56,637 INFO  [http-nio-8085-exec-3] c.l.b.a.c.i.StatisticsAccessInterfaceTimeInterceptor.(): [96m>>>> 收到请求 - URI: /user/get/mine Method: GET Params: {}[0m
2025-01-22 09:36:57,327 ERROR [http-nio-8085-exec-3] c.l.b.c.e.GlobalException.(): [91mSYSTEM-ERROR: 系统错误, 错误信息: java.lang.ClassCastException: class java.lang.String cannot be cast to class java.lang.Integer (java.lang.String and java.lang.Integer are in module java.base of loader 'bootstrap') class java.lang.String cannot be cast to class java.lang.Integer (java.lang.String and java.lang.Integer are in module java.base of loader 'bootstrap')[0m
2025-01-22 09:36:57,328 INFO  [http-nio-8085-exec-3] c.l.b.a.c.i.StatisticsAccessInterfaceTime.(): [94m>>> 执行了：691毫秒[0m
2025-01-22 09:39:45,912 INFO  [http-nio-8085-exec-6] c.l.b.a.c.i.StatisticsAccessInterfaceTimeInterceptor.(): [96m>>>> 收到请求 - URI: /user/get/mine Method: GET Params: {}[0m
2025-01-22 09:39:45,916 ERROR [http-nio-8085-exec-6] c.l.b.c.e.GlobalException.(): [91mSYSTEM-ERROR: 系统错误, 错误信息: java.lang.ClassCastException: class java.lang.String cannot be cast to class java.lang.Integer (java.lang.String and java.lang.Integer are in module java.base of loader 'bootstrap') class java.lang.String cannot be cast to class java.lang.Integer (java.lang.String and java.lang.Integer are in module java.base of loader 'bootstrap')[0m
2025-01-22 09:39:45,916 INFO  [http-nio-8085-exec-6] c.l.b.a.c.i.StatisticsAccessInterfaceTime.(): [94m>>> 执行了：4毫秒[0m
2025-01-22 09:42:49,771 INFO  [SpringApplicationShutdownHook] c.a.d.p.DruidDataSource.(): {dataSource-0} closing ...
2025-01-22 09:42:55,617 INFO  [main] c.l.b.BlogApplication.(): Starting BlogApplication using Java 17.0.5 with PID 17972 (G:\SpringBootProduct\Blog\lj-blog-starter\target\classes started by PC in G:\SpringBootProduct\Blog)
2025-01-22 09:42:55,624 INFO  [main] c.l.b.BlogApplication.(): No active profile set, falling back to 1 default profile: "default"
2025-01-22 09:42:56,054 INFO  [main] o.s.d.r.c.RepositoryConfigurationDelegate.(): Multiple Spring Data modules found, entering strict repository configuration mode
2025-01-22 09:42:56,057 INFO  [main] o.s.d.r.c.RepositoryConfigurationDelegate.(): Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-01-22 09:42:56,085 INFO  [main] o.s.d.r.c.RepositoryConfigurationDelegate.(): Finished Spring Data repository scanning in 18 ms. Found 0 Redis repository interfaces.
2025-01-22 09:42:56,462 INFO  [main] o.s.b.w.e.t.TomcatWebServer.(): Tomcat initialized with port 8085 (http)
2025-01-22 09:42:56,470 INFO  [main] o.a.c.h.Http11NioProtocol.(): Initializing ProtocolHandler ["http-nio-8085"]
2025-01-22 09:42:56,480 INFO  [main] o.a.c.c.StandardService.(): Starting service [Tomcat]
2025-01-22 09:42:56,481 INFO  [main] o.a.c.c.StandardEngine.(): Starting Servlet engine: [Apache Tomcat/10.1.31]
2025-01-22 09:42:56,536 INFO  [main] o.a.c.c.C.[.[.[/].(): Initializing Spring embedded WebApplicationContext
2025-01-22 09:42:56,537 INFO  [main] o.s.b.w.s.c.ServletWebServerApplicationContext.(): Root WebApplicationContext: initialization completed in 879 ms
2025-01-22 09:42:57,886 INFO  [main] o.s.b.a.w.s.WelcomePageHandlerMapping.(): Adding welcome page template: index
2025-01-22 09:42:58,883 INFO  [main] o.a.c.h.Http11NioProtocol.(): Starting ProtocolHandler ["http-nio-8085"]
2025-01-22 09:42:58,896 INFO  [main] o.s.b.w.e.t.TomcatWebServer.(): Tomcat started on port 8085 (http) with context path '/'
2025-01-22 09:42:58,901 INFO  [main] c.l.b.BlogApplication.(): Started BlogApplication in 3.561 seconds (process running for 6.212)
2025-01-22 09:43:10,218 INFO  [http-nio-8085-exec-1] o.a.c.c.C.[.[.[/].(): Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-01-22 09:43:10,218 INFO  [http-nio-8085-exec-1] o.s.w.s.DispatcherServlet.(): Initializing Servlet 'dispatcherServlet'
2025-01-22 09:43:10,219 INFO  [http-nio-8085-exec-1] o.s.w.s.DispatcherServlet.(): Completed initialization in 1 ms
2025-01-22 09:43:10,233 INFO  [http-nio-8085-exec-1] c.l.b.a.c.i.StatisticsAccessInterfaceTimeInterceptor.(): [96m>>>> 收到请求 - URI: /user/get/mine Method: GET Params: {}[0m
2025-01-22 09:43:10,866 INFO  [http-nio-8085-exec-1] c.l.b.a.c.i.StatisticsAccessInterfaceTime.(): [94m>>> 执行了：634毫秒[0m
2025-01-22 14:32:18,508 INFO  [http-nio-8085-exec-10] c.l.b.a.c.i.StatisticsAccessInterfaceTimeInterceptor.(): [96m>>>> 收到请求 - URI: /home/sentences Method: GET Params: {}[0m
2025-01-22 14:32:18,833 INFO  [http-nio-8085-exec-4] c.l.b.a.c.i.StatisticsAccessInterfaceTimeInterceptor.(): [96m>>>> 收到请求 - URI: /home/articles Method: POST Params: {}[0m
2025-01-22 14:32:18,996 INFO  [http-nio-8085-exec-10] BLOG-SYSTEM-SQL.(): [93m>>>> 参数 = BlogContentItems(id=null, type=null, content=null, createTime=null, updateTime=null, isDeleted=0)[0m
2025-01-22 14:32:18,996 INFO  [http-nio-8085-exec-10] BLOG-SYSTEM-SQL.(): [93m>>>> 调用方法 = com.lj.blog.infra.basic.dao.BlogContentItemsDao.queryPrimary[0m
2025-01-22 14:32:18,997 INFO  [http-nio-8085-exec-10] BLOG-SYSTEM-SQL.(): [93m>>>> 使用的完整的SQL:
select * from blog_c ontent_items[0m
2025-01-22 14:32:19,219 INFO  [http-nio-8085-exec-10] c.a.d.p.DruidDataSource.(): {dataSource-1} inited
2025-01-22 14:32:19,459 INFO  [http-nio-8085-exec-6] c.l.b.a.c.i.StatisticsAccessInterfaceTimeInterceptor.(): [96m>>>> 收到请求 - URI: /home/sentences Method: GET Params: {}[0m
2025-01-22 14:32:19,459 INFO  [http-nio-8085-exec-8] c.l.b.a.c.i.StatisticsAccessInterfaceTimeInterceptor.(): [96m>>>> 收到请求 - URI: /home/articles Method: POST Params: {}[0m
2025-01-22 14:32:19,461 INFO  [http-nio-8085-exec-6] BLOG-SYSTEM-SQL.(): [93m>>>> 参数 = BlogContentItems(id=null, type=null, content=null, createTime=null, updateTime=null, isDeleted=0)[0m
2025-01-22 14:32:19,461 INFO  [http-nio-8085-exec-6] BLOG-SYSTEM-SQL.(): [93m>>>> 调用方法 = com.lj.blog.infra.basic.dao.BlogContentItemsDao.queryPrimary[0m
2025-01-22 14:32:19,461 INFO  [http-nio-8085-exec-6] BLOG-SYSTEM-SQL.(): [93m>>>> 使用的完整的SQL:
select * from blog_c ontent_items[0m
2025-01-22 14:32:19,608 INFO  [http-nio-8085-exec-10] BLOG-SYSTEM-SQL.(): [32mSQL 执行时间:
2025-01-22 14:32:19,608 INFO  [http-nio-8085-exec-6] BLOG-SYSTEM-SQL.(): [32mSQL 执行时间:
2025-01-22 14:32:19,608 INFO  [http-nio-8085-exec-10] BLOG-SYSTEM-SQL.(): 方法: query
2025-01-22 14:32:19,608 INFO  [http-nio-8085-exec-6] BLOG-SYSTEM-SQL.(): 方法: query
2025-01-22 14:32:19,608 INFO  [http-nio-8085-exec-10] BLOG-SYSTEM-SQL.(): 执行时间: 609 ms
2025-01-22 14:32:19,608 INFO  [http-nio-8085-exec-6] BLOG-SYSTEM-SQL.(): 执行时间: 146 ms
2025-01-22 14:32:19,608 INFO  [http-nio-8085-exec-10] BLOG-SYSTEM-SQL.(): ========================================[0m
2025-01-22 14:32:19,608 INFO  [http-nio-8085-exec-6] BLOG-SYSTEM-SQL.(): ========================================[0m
2025-01-22 14:32:19,775 INFO  [http-nio-8085-exec-4] c.l.b.d.s.i.BlogArticleBasicDomainServiceImp.(): BlogArticleBasicDomainServiceImp.getBlogArticleBasicInfo.pageRequest:{"offset":0,"pageNum":1,"pageSize":10}
2025-01-22 14:32:19,775 INFO  [http-nio-8085-exec-8] c.l.b.d.s.i.BlogArticleBasicDomainServiceImp.(): BlogArticleBasicDomainServiceImp.getBlogArticleBasicInfo.pageRequest:{"offset":0,"pageNum":1,"pageSize":10}
2025-01-22 14:32:19,775 INFO  [http-nio-8085-exec-10] c.l.b.d.s.i.BlogContentItemsDomainServiceImp.(): BlogContentItemsDomainServiceImp.getAllSentences.boList:[{"content":"Wonder your life","type":1},{"content":"探索编程的无限可能","type":0},{"content":"Together, We Can Achieve More","type":0},{"content":"Success Starts with Self-Belief","type":0},{"content":"Every Day is a New Opportunity","type":0},{"content":"Turn Your Dreams into Plans","type":0},{"content":"用代码改变世界","type":0},{"content":"ljBlog. All Rights Reserved. 版权所有","type":2},{"content":"在 技术的海洋中探索前行，分享知识的乐趣，共同成长的喜悦","type":3}]
2025-01-22 14:32:19,775 INFO  [http-nio-8085-exec-6] c.l.b.d.s.i.BlogContentItemsDomainServiceImp.(): BlogContentItemsDomainServiceImp.getAllSentences.boList:[{"content":"Wonder your life","type":1},{"content":"探索编程的无限可能","type":0},{"content":"Together, We Can Achieve More","type":0},{"content":"Success Starts with Self-Belief","type":0},{"content":"Every Day is a New Opportunity","type":0},{"content":"Turn Your Dreams into Plans","type":0},{"content":"用代码改变世界","type":0},{"content":"ljBlog. All Rights Reserved. 版权所有","type":2},{"content":"在 技术的海洋中探索前行，分享知识的乐趣，共同成长的喜悦","type":3}]
2025-01-22 14:32:19,795 INFO  [http-nio-8085-exec-6] c.l.b.a.c.i.StatisticsAccessInterfaceTime.(): [94m>>> 执行了：336毫秒[0m
2025-01-22 14:32:19,795 WARN  [http-nio-8085-exec-10] c.l.b.a.c.i.StatisticsAccessInterfaceTime.(): [93m执行时间过长：1305毫秒[0m
2025-01-22 14:32:19,800 INFO  [http-nio-8085-exec-4] BLOG-SYSTEM-SQL.(): [93m>>>> 参数 = {blogArticleBasicInfo=null, pageRequest=com.lj.blog.common.result.PageRequest@6a39642e, param1=null, param2=com.lj.blog.common.result.PageRequest@6a39642e}[0m
2025-01-22 14:32:19,800 INFO  [http-nio-8085-exec-8] BLOG-SYSTEM-SQL.(): [93m>>>> 参数 = {blogArticleBasicInfo=null, pageRequest=com.lj.blog.common.result.PageRequest@6930a7a4, param1=null, param2=com.lj.blog.common.result.PageRequest@6930a7a4}[0m
2025-01-22 14:32:19,800 INFO  [http-nio-8085-exec-4] BLOG-SYSTEM-SQL.(): [93m>>>> 调用方法 = com.lj.blog.infra.basic.dao.BlogArticleBasicInfoDao.queryAllByLimit[0m
2025-01-22 14:32:19,800 INFO  [http-nio-8085-exec-8] BLOG-SYSTEM-SQL.(): [93m>>>> 调用方法 = com.lj.blog.infra.basic.dao.BlogArticleBasicInfoDao.queryAllByLimit[0m
2025-01-22 14:32:19,802 INFO  [http-nio-8085-exec-8] BLOG-SYSTEM-SQL.(): [93m>>>> 使用的完整的SQL:
select id, title, descripti on, reading_time, cover_image, article_status, create_time, is_deleted from blog_article_basic_info LIMIT 10 OFFSET 0[0m
2025-01-22 14:32:19,802 INFO  [http-nio-8085-exec-4] BLOG-SYSTEM-SQL.(): [93m>>>> 使用的完整的SQL:
select id, title, descripti on, reading_time, cover_image, article_status, create_time, is_deleted from blog_article_basic_info LIMIT 10 OFFSET 0[0m
2025-01-22 14:32:19,821 INFO  [http-nio-8085-exec-8] BLOG-SYSTEM-SQL.(): [32mSQL 执行时间:
2025-01-22 14:32:19,821 INFO  [http-nio-8085-exec-8] BLOG-SYSTEM-SQL.(): 方法: query
2025-01-22 14:32:19,821 INFO  [http-nio-8085-exec-8] BLOG-SYSTEM-SQL.(): 执行时间: 18 ms
2025-01-22 14:32:19,821 INFO  [http-nio-8085-exec-8] BLOG-SYSTEM-SQL.(): ========================================[0m
2025-01-22 14:32:19,824 INFO  [http-nio-8085-exec-4] BLOG-SYSTEM-SQL.(): [32mSQL 执行时间:
2025-01-22 14:32:19,824 INFO  [http-nio-8085-exec-4] BLOG-SYSTEM-SQL.(): 方法: query
2025-01-22 14:32:19,824 INFO  [http-nio-8085-exec-4] BLOG-SYSTEM-SQL.(): 执行时间: 21 ms
2025-01-22 14:32:19,824 INFO  [http-nio-8085-exec-4] BLOG-SYSTEM-SQL.(): ========================================[0m
2025-01-22 14:32:19,826 INFO  [http-nio-8085-exec-8] BLOG-SYSTEM-SQL.(): [93m>>>> 参数 = {articleIds=[1, 2, 3, 4, 5, 6, 7, 8], param1=[1, 2, 3, 4, 5, 6, 7, 8]}[0m
2025-01-22 14:32:19,826 INFO  [http-nio-8085-exec-4] BLOG-SYSTEM-SQL.(): [93m>>>> 参数 = {articleIds=[1, 2, 3, 4, 5, 6, 7, 8], param1=[1, 2, 3, 4, 5, 6, 7, 8]}[0m
2025-01-22 14:32:19,826 INFO  [http-nio-8085-exec-8] BLOG-SYSTEM-SQL.(): [93m>>>> 调用方法 = com.lj.blog.infra.basic.dao.BlogArticleCategoryLabelMappingDao.queryByArticleIds[0m
2025-01-22 14:32:19,826 INFO  [http-nio-8085-exec-4] BLOG-SYSTEM-SQL.(): [93m>>>> 调用方法 = com.lj.blog.infra.basic.dao.BlogArticleCategoryLabelMappingDao.queryByArticleIds[0m
2025-01-22 14:32:19,826 INFO  [http-nio-8085-exec-8] BLOG-SYSTEM-SQL.(): [93m>>>> 使用的完整的SQL:
select * from blog_article_categ ory_label_mapping where article_id in ( 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 )[0m
2025-01-22 14:32:19,826 INFO  [http-nio-8085-exec-4] BLOG-SYSTEM-SQL.(): [93m>>>> 使用的完整的SQL:
select * from blog_article_categ ory_label_mapping where article_id in ( 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 )[0m
2025-01-22 14:32:19,849 INFO  [http-nio-8085-exec-8] BLOG-SYSTEM-SQL.(): [32mSQL 执行时间:
2025-01-22 14:32:19,849 INFO  [http-nio-8085-exec-4] BLOG-SYSTEM-SQL.(): [32mSQL 执行时间:
2025-01-22 14:32:19,849 INFO  [http-nio-8085-exec-8] BLOG-SYSTEM-SQL.(): 方法: query
2025-01-22 14:32:19,849 INFO  [http-nio-8085-exec-4] BLOG-SYSTEM-SQL.(): 方法: query
2025-01-22 14:32:19,849 INFO  [http-nio-8085-exec-8] BLOG-SYSTEM-SQL.(): 执行时间: 23 ms
2025-01-22 14:32:19,849 INFO  [http-nio-8085-exec-4] BLOG-SYSTEM-SQL.(): 执行时间: 23 ms
2025-01-22 14:32:19,849 INFO  [http-nio-8085-exec-8] BLOG-SYSTEM-SQL.(): ========================================[0m
2025-01-22 14:32:19,849 INFO  [http-nio-8085-exec-4] BLOG-SYSTEM-SQL.(): ========================================[0m
2025-01-22 14:32:19,850 INFO  [http-nio-8085-exec-4] BLOG-SYSTEM-SQL.(): [93m>>>> 参数 = {ids=[1, 3, 4, 5, 6], param1=[1, 3, 4, 5, 6]}[0m
2025-01-22 14:32:19,850 INFO  [http-nio-8085-exec-4] BLOG-SYSTEM-SQL.(): [93m>>>> 调用方法 = com.lj.blog.infra.basic.dao.BlogCategoryDao.queryByIds[0m
2025-01-22 14:32:19,850 INFO  [http-nio-8085-exec-8] BLOG-SYSTEM-SQL.(): [93m>>>> 参数 = {ids=[1, 3, 4, 5, 6], param1=[1, 3, 4, 5, 6]}[0m
2025-01-22 14:32:19,850 INFO  [http-nio-8085-exec-8] BLOG-SYSTEM-SQL.(): [93m>>>> 调用方法 = com.lj.blog.infra.basic.dao.BlogCategoryDao.queryByIds[0m
2025-01-22 14:32:19,851 INFO  [http-nio-8085-exec-8] BLOG-SYSTEM-SQL.(): [93m>>>> 使用的完整的SQL:
select * from blog_categ ory where id in ( 1 , 3 , 4 , 5 , 6 ) and is_deleted = 0[0m
2025-01-22 14:32:19,851 INFO  [http-nio-8085-exec-4] BLOG-SYSTEM-SQL.(): [93m>>>> 使用的完整的SQL:
select * from blog_categ ory where id in ( 1 , 3 , 4 , 5 , 6 ) and is_deleted = 0[0m
2025-01-22 14:32:19,858 INFO  [http-nio-8085-exec-8] BLOG-SYSTEM-SQL.(): [32mSQL 执行时间:
2025-01-22 14:32:19,858 INFO  [http-nio-8085-exec-4] BLOG-SYSTEM-SQL.(): [32mSQL 执行时间:
2025-01-22 14:32:19,858 INFO  [http-nio-8085-exec-4] BLOG-SYSTEM-SQL.(): 方法: query
2025-01-22 14:32:19,858 INFO  [http-nio-8085-exec-8] BLOG-SYSTEM-SQL.(): 方法: query
2025-01-22 14:32:19,858 INFO  [http-nio-8085-exec-4] BLOG-SYSTEM-SQL.(): 执行时间: 6 ms
2025-01-22 14:32:19,858 INFO  [http-nio-8085-exec-8] BLOG-SYSTEM-SQL.(): 执行时间: 6 ms
2025-01-22 14:32:19,858 INFO  [http-nio-8085-exec-4] BLOG-SYSTEM-SQL.(): ========================================[0m
2025-01-22 14:32:19,858 INFO  [http-nio-8085-exec-8] BLOG-SYSTEM-SQL.(): ========================================[0m
2025-01-22 14:32:19,864 INFO  [http-nio-8085-exec-4] BLOG-SYSTEM-SQL.(): [93m>>>> 参数 = {ids=[1, 2, 3, 4, 5, 6, 7, 8, 9], param1=[1, 2, 3, 4, 5, 6, 7, 8, 9]}[0m
2025-01-22 14:32:19,864 INFO  [http-nio-8085-exec-4] BLOG-SYSTEM-SQL.(): [93m>>>> 调用方法 = com.lj.blog.infra.basic.dao.BlogLabelDao.queryByIds[0m
2025-01-22 14:32:19,864 INFO  [http-nio-8085-exec-8] BLOG-SYSTEM-SQL.(): [93m>>>> 参数 = {ids=[1, 2, 3, 4, 5, 6, 7, 8, 9], param1=[1, 2, 3, 4, 5, 6, 7, 8, 9]}[0m
2025-01-22 14:32:19,864 INFO  [http-nio-8085-exec-4] BLOG-SYSTEM-SQL.(): [93m>>>> 使用的完整的SQL:
select * from blog_label where id in ( 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 )[0m
2025-01-22 14:32:19,864 INFO  [http-nio-8085-exec-8] BLOG-SYSTEM-SQL.(): [93m>>>> 调用方法 = com.lj.blog.infra.basic.dao.BlogLabelDao.queryByIds[0m
2025-01-22 14:32:19,865 INFO  [http-nio-8085-exec-8] BLOG-SYSTEM-SQL.(): [93m>>>> 使用的完整的SQL:
select * from blog_label where id in ( 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 )[0m
2025-01-22 14:32:19,924 INFO  [http-nio-8085-exec-8] BLOG-SYSTEM-SQL.(): [32mSQL 执行时间:
2025-01-22 14:32:19,924 INFO  [http-nio-8085-exec-4] BLOG-SYSTEM-SQL.(): [32mSQL 执行时间:
2025-01-22 14:32:19,924 INFO  [http-nio-8085-exec-8] BLOG-SYSTEM-SQL.(): 方法: query
2025-01-22 14:32:19,924 INFO  [http-nio-8085-exec-4] BLOG-SYSTEM-SQL.(): 方法: query
2025-01-22 14:32:19,924 INFO  [http-nio-8085-exec-8] BLOG-SYSTEM-SQL.(): 执行时间: 58 ms
2025-01-22 14:32:19,924 INFO  [http-nio-8085-exec-8] BLOG-SYSTEM-SQL.(): ========================================[0m
2025-01-22 14:32:19,924 INFO  [http-nio-8085-exec-4] BLOG-SYSTEM-SQL.(): 执行时间: 58 ms
2025-01-22 14:32:19,924 INFO  [http-nio-8085-exec-4] BLOG-SYSTEM-SQL.(): ========================================[0m
2025-01-22 14:32:19,925 INFO  [http-nio-8085-exec-4] BLOG-SYSTEM-SQL.(): [93m>>>> 参数 = {ids=[1, 2, 3, 4, 5, 6, 7, 8], param1=[1, 2, 3, 4, 5, 6, 7, 8]}[0m
2025-01-22 14:32:19,925 INFO  [http-nio-8085-exec-4] BLOG-SYSTEM-SQL.(): [93m>>>> 调用方法 = com.lj.blog.infra.basic.dao.BlogArticleStatusDao.queryByIds[0m
2025-01-22 14:32:19,925 INFO  [http-nio-8085-exec-4] BLOG-SYSTEM-SQL.(): [93m>>>> 使用的完整的SQL:
select * from blog_article_status where id in ( 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 )[0m
2025-01-22 14:32:19,925 INFO  [http-nio-8085-exec-8] BLOG-SYSTEM-SQL.(): [93m>>>> 参数 = {ids=[1, 2, 3, 4, 5, 6, 7, 8], param1=[1, 2, 3, 4, 5, 6, 7, 8]}[0m
2025-01-22 14:32:19,925 INFO  [http-nio-8085-exec-8] BLOG-SYSTEM-SQL.(): [93m>>>> 调用方法 = com.lj.blog.infra.basic.dao.BlogArticleStatusDao.queryByIds[0m
2025-01-22 14:32:19,925 INFO  [http-nio-8085-exec-8] BLOG-SYSTEM-SQL.(): [93m>>>> 使用的完整的SQL:
select * from blog_article_status where id in ( 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 )[0m
2025-01-22 14:32:19,928 INFO  [http-nio-8085-exec-8] BLOG-SYSTEM-SQL.(): [32mSQL 执行时间:
2025-01-22 14:32:19,928 INFO  [http-nio-8085-exec-8] BLOG-SYSTEM-SQL.(): 方法: query
2025-01-22 14:32:19,928 INFO  [http-nio-8085-exec-8] BLOG-SYSTEM-SQL.(): 执行时间: 3 ms
2025-01-22 14:32:19,928 INFO  [http-nio-8085-exec-8] BLOG-SYSTEM-SQL.(): ========================================[0m
2025-01-22 14:32:19,928 INFO  [http-nio-8085-exec-4] BLOG-SYSTEM-SQL.(): [32mSQL 执行时间:
2025-01-22 14:32:19,928 INFO  [http-nio-8085-exec-4] BLOG-SYSTEM-SQL.(): 方法: query
2025-01-22 14:32:19,928 INFO  [http-nio-8085-exec-4] BLOG-SYSTEM-SQL.(): 执行时间: 3 ms
2025-01-22 14:32:19,928 INFO  [http-nio-8085-exec-4] BLOG-SYSTEM-SQL.(): ========================================[0m
2025-01-22 14:32:19,930 INFO  [http-nio-8085-exec-8] c.l.b.d.s.i.BlogArticleBasicDomainServiceImp.(): BlogArticleBasicDomainServiceImp.getBlogArticleBasicInf.boList[BlogArticleBasicInfoBo(id=1, title=Vue3 基础教程, description=深入学习Vue3的核心概念和实践应用, coverImage=https://doctorpicture.oss-cn-beijing.aliyuncs.com/avatar/95520dd8-c8d8-4ebf-9807-ea166a7bcf56.jpg, createTime=Thu Dec 19 05:43:13 CST 2024, readingTime=5, category=前端开发, labels=[Vue3], likes=21, views=12, comments=0, collections=0), BlogArticleBasicInfoBo(id=2, title=TypeScript 入门指南, description=详解TypeScript的基本语法和高级特性, coverImage=https://doctorpicture.oss-cn-beijing.aliyuncs.com/avatar/95520dd8-c8d8-4ebf-9807-ea166a7bcf56.jpg, createTime=Fri Dec 20 07:24:28 CST 2024, readingTime=7, category=前端开发, labels=[Vue3, JavaScript], likes=null, views=null, comments=null, collections=null), BlogArticleBasicInfoBo(id=3, title=前端构建工具对比, description=深入对比Vite、Webpack和Rollup的特点和应用场景, coverImage=https://doctorpicture.oss-cn-beijing.aliyuncs.com/avatar/95520dd8-c8d8-4ebf-9807-ea166a7bcf56.jpg, createTime=Sat Dec 21 02:28:09 CST 2024, readingTime=6, category=前端开发, labels=[Vue3, Vite], likes=null, views=null, comments=null, collections=null), BlogArticleBasicInfoBo(id=4, title=Docker容器化实践, description=详细讲解Docker的基本概念和实际应用案例, coverImage=https://doctorpicture.oss-cn-beijing.aliyuncs.com/avatar/95520dd8-c8d8-4ebf-9807-ea166a7bcf56.jpg, createTime=Sat Dec 21 02:28:38 CST 2024, readingTime=8, category=数据库, labels=[Docker], likes=null, views=null, comments=null, collections=null), BlogArticleBasicInfoBo(id=5, title=React高级开发技巧, description=探索React的高级特性和性能优化方法, coverImage=https://doctorpicture.oss-cn-beijing.aliyuncs.com/avatar/95520dd8-c8d8-4ebf-9807-ea166a7bcf56.jpg, createTime=Sat Dec 21 02:29:19 CST 2024, readingTime=10, category=前端开发, labels=[React], likes=null, views=null, comments=null, collections=null), BlogArticleBasicInfoBo(id=6, title=MongoDB数据库入门, description=学习MongoDB的基础操作和实践应用, coverImage=https://doctorpicture.oss-cn-beijing.aliyuncs.com/avatar/95520dd8-c8d8-4ebf-9807-ea166a7bcf56.jpg, createTime=Sat Dec 21 02:29:54 CST 2024, readingTime=5, category=架构设计, labels=[MongoDB], likes=null, views=null, comments=null, collections=null), BlogArticleBasicInfoBo(id=7, title=微服务架构实践, description=探讨微服务架构的设计与实现方案, coverImage=https://doctorpicture.oss-cn-beijing.aliyuncs.com/avatar/95520dd8-c8d8-4ebf-9807-ea166a7bcf56.jpg, createTime=Sat Dec 21 02:30:27 CST 2024, readingTime=7, category=开发工具, labels=[SpringBoot], likes=null, views=null, comments=null, collections=null), BlogArticleBasicInfoBo(id=8, title=AI编程助手指南, description=介绍主流的AI编程工具，如GitHub Copilot, coverImage=https://doctorpicture.oss-cn-beijing.aliyuncs.com/avatar/95520dd8-c8d8-4ebf-9807-ea166a7bcf56.jpg, createTime=Sat Dec 21 02:31:05 CST 2024, readingTime=8, category=运维部署, labels=[AI开发, Cursor], likes=null, views=null, comments=null, collections=null)]
2025-01-22 14:32:19,930 INFO  [http-nio-8085-exec-4] c.l.b.d.s.i.BlogArticleBasicDomainServiceImp.(): BlogArticleBasicDomainServiceImp.getBlogArticleBasicInf.boList[BlogArticleBasicInfoBo(id=1, title=Vue3 基础教程, description=深入学习Vue3的核心概念和实践应用, coverImage=https://doctorpicture.oss-cn-beijing.aliyuncs.com/avatar/95520dd8-c8d8-4ebf-9807-ea166a7bcf56.jpg, createTime=Thu Dec 19 05:43:13 CST 2024, readingTime=5, category=前端开发, labels=[Vue3], likes=21, views=12, comments=0, collections=0), BlogArticleBasicInfoBo(id=2, title=TypeScript 入门指南, description=详解TypeScript的基本语法和高级特性, coverImage=https://doctorpicture.oss-cn-beijing.aliyuncs.com/avatar/95520dd8-c8d8-4ebf-9807-ea166a7bcf56.jpg, createTime=Fri Dec 20 07:24:28 CST 2024, readingTime=7, category=前端开发, labels=[Vue3, JavaScript], likes=null, views=null, comments=null, collections=null), BlogArticleBasicInfoBo(id=3, title=前端构建工具对比, description=深入对比Vite、Webpack和Rollup的特点和应用场景, coverImage=https://doctorpicture.oss-cn-beijing.aliyuncs.com/avatar/95520dd8-c8d8-4ebf-9807-ea166a7bcf56.jpg, createTime=Sat Dec 21 02:28:09 CST 2024, readingTime=6, category=前端开发, labels=[Vue3, Vite], likes=null, views=null, comments=null, collections=null), BlogArticleBasicInfoBo(id=4, title=Docker容器化实践, description=详细讲解Docker的基本概念和实际应用案例, coverImage=https://doctorpicture.oss-cn-beijing.aliyuncs.com/avatar/95520dd8-c8d8-4ebf-9807-ea166a7bcf56.jpg, createTime=Sat Dec 21 02:28:38 CST 2024, readingTime=8, category=数据库, labels=[Docker], likes=null, views=null, comments=null, collections=null), BlogArticleBasicInfoBo(id=5, title=React高级开发技巧, description=探索React的高级特性和性能优化方法, coverImage=https://doctorpicture.oss-cn-beijing.aliyuncs.com/avatar/95520dd8-c8d8-4ebf-9807-ea166a7bcf56.jpg, createTime=Sat Dec 21 02:29:19 CST 2024, readingTime=10, category=前端开发, labels=[React], likes=null, views=null, comments=null, collections=null), BlogArticleBasicInfoBo(id=6, title=MongoDB数据库入门, description=学习MongoDB的基础操作和实践应用, coverImage=https://doctorpicture.oss-cn-beijing.aliyuncs.com/avatar/95520dd8-c8d8-4ebf-9807-ea166a7bcf56.jpg, createTime=Sat Dec 21 02:29:54 CST 2024, readingTime=5, category=架构设计, labels=[MongoDB], likes=null, views=null, comments=null, collections=null), BlogArticleBasicInfoBo(id=7, title=微服务架构实践, description=探讨微服务架构的设计与实现方案, coverImage=https://doctorpicture.oss-cn-beijing.aliyuncs.com/avatar/95520dd8-c8d8-4ebf-9807-ea166a7bcf56.jpg, createTime=Sat Dec 21 02:30:27 CST 2024, readingTime=7, category=开发工具, labels=[SpringBoot], likes=null, views=null, comments=null, collections=null), BlogArticleBasicInfoBo(id=8, title=AI编程助手指南, description=介绍主流的AI编程工具，如GitHub Copilot, coverImage=https://doctorpicture.oss-cn-beijing.aliyuncs.com/avatar/95520dd8-c8d8-4ebf-9807-ea166a7bcf56.jpg, createTime=Sat Dec 21 02:31:05 CST 2024, readingTime=8, category=运维部署, labels=[AI开发, Cursor], likes=null, views=null, comments=null, collections=null)]
2025-01-22 14:32:19,983 INFO  [http-nio-8085-exec-4] c.l.b.a.c.c.BlogArticleInfoController.(): BlogArticleInfoController.getBlogArticleInfos.dto:[{"category":"前端开发","collections":0,"comments":0,"coverImage":"https://doctorpicture.oss-cn-beijing.aliyuncs.com/avatar/95520dd8-c8d8-4ebf-9807-ea166a7bcf56.jpg","createTime":"2024-12-19 05:43:13","description":"深入学习Vue3的核心概念和实践应用","id":1,"labels":["Vue3"],"likes":21,"readingTime":5,"title":"Vue3 基础教程","views":12},{"category":"前端开发","coverImage":"https://doctorpicture.oss-cn-beijing.aliyuncs.com/avatar/95520dd8-c8d8-4ebf-9807-ea166a7bcf56.jpg","createTime":"2024-12-20 07:24:28","description":"详解TypeScript的基本语法和高级特性","id":2,"labels":["Vue3","JavaScript"],"readingTime":7,"title":"TypeScript 入门指南"},{"category":"前端开发","coverImage":"https://doctorpicture.oss-cn-beijing.aliyuncs.com/avatar/95520dd8-c8d8-4ebf-9807-ea166a7bcf56.jpg","createTime":"2024-12-21 02:28:09","description":"深入对比Vite、Webpack和Rollup的特点和应用场景","id":3,"labels":["Vue3","Vite"],"readingTime":6,"title":"前端构建工具对比"},{"category":"数据库","coverImage":"https://doctorpicture.oss-cn-beijing.aliyuncs.com/avatar/95520dd8-c8d8-4ebf-9807-ea166a7bcf56.jpg","createTime":"2024-12-21 02:28:38","description":"详细讲解Docker的基本概念和实际应用案例","id":4,"labels":["Docker"],"readingTime":8,"title":"Docker容器化实践"},{"category":"前端开发","coverImage":"https://doctorpicture.oss-cn-beijing.aliyuncs.com/avatar/95520dd8-c8d8-4ebf-9807-ea166a7bcf56.jpg","createTime":"2024-12-21 02:29:19","description":"探索React的高级特性和性能优化方法","id":5,"labels":["React"],"readingTime":10,"title":"React高级开发技巧"},{"category":"架构设计","coverImage":"https://doctorpicture.oss-cn-beijing.aliyuncs.com/avatar/95520dd8-c8d8-4ebf-9807-ea166a7bcf56.jpg","createTime":"2024-12-21 02:29:54","description":"学习MongoDB的基础操作和实践应用","id":6,"labels":["MongoDB"],"readingTime":5,"title":"MongoDB数据库入门"},{"category":"开发工具","coverImage":"https://doctorpicture.oss-cn-beijing.aliyuncs.com/avatar/95520dd8-c8d8-4ebf-9807-ea166a7bcf56.jpg","createTime":"2024-12-21 02:30:27","description":"探讨微服务架构的设计与实现方案","id":7,"labels":["SpringBoot"],"readingTime":7,"title":"微服务架构实践"},{"category":"运维部署","coverImage":"https://doctorpicture.oss-cn-beijing.aliyuncs.com/avatar/95520dd8-c8d8-4ebf-9807-ea166a7bcf56.jpg","createTime":"2024-12-21 02:31:05","description":"介绍主流的AI编程工具，如GitHub Copilot","id":8,"labels":["AI开发","Cursor"],"readingTime":8,"title":"AI编程助手指南"}]
2025-01-22 14:32:19,983 INFO  [http-nio-8085-exec-8] c.l.b.a.c.c.BlogArticleInfoController.(): BlogArticleInfoController.getBlogArticleInfos.dto:[{"category":"前端开发","collections":0,"comments":0,"coverImage":"https://doctorpicture.oss-cn-beijing.aliyuncs.com/avatar/95520dd8-c8d8-4ebf-9807-ea166a7bcf56.jpg","createTime":"2024-12-19 05:43:13","description":"深入学习Vue3的核心概念和实践应用","id":1,"labels":["Vue3"],"likes":21,"readingTime":5,"title":"Vue3 基础教程","views":12},{"category":"前端开发","coverImage":"https://doctorpicture.oss-cn-beijing.aliyuncs.com/avatar/95520dd8-c8d8-4ebf-9807-ea166a7bcf56.jpg","createTime":"2024-12-20 07:24:28","description":"详解TypeScript的基本语法和高级特性","id":2,"labels":["Vue3","JavaScript"],"readingTime":7,"title":"TypeScript 入门指南"},{"category":"前端开发","coverImage":"https://doctorpicture.oss-cn-beijing.aliyuncs.com/avatar/95520dd8-c8d8-4ebf-9807-ea166a7bcf56.jpg","createTime":"2024-12-21 02:28:09","description":"深入对比Vite、Webpack和Rollup的特点和应用场景","id":3,"labels":["Vue3","Vite"],"readingTime":6,"title":"前端构建工具对比"},{"category":"数据库","coverImage":"https://doctorpicture.oss-cn-beijing.aliyuncs.com/avatar/95520dd8-c8d8-4ebf-9807-ea166a7bcf56.jpg","createTime":"2024-12-21 02:28:38","description":"详细讲解Docker的基本概念和实际应用案例","id":4,"labels":["Docker"],"readingTime":8,"title":"Docker容器化实践"},{"category":"前端开发","coverImage":"https://doctorpicture.oss-cn-beijing.aliyuncs.com/avatar/95520dd8-c8d8-4ebf-9807-ea166a7bcf56.jpg","createTime":"2024-12-21 02:29:19","description":"探索React的高级特性和性能优化方法","id":5,"labels":["React"],"readingTime":10,"title":"React高级开发技巧"},{"category":"架构设计","coverImage":"https://doctorpicture.oss-cn-beijing.aliyuncs.com/avatar/95520dd8-c8d8-4ebf-9807-ea166a7bcf56.jpg","createTime":"2024-12-21 02:29:54","description":"学习MongoDB的基础操作和实践应用","id":6,"labels":["MongoDB"],"readingTime":5,"title":"MongoDB数据库入门"},{"category":"开发工具","coverImage":"https://doctorpicture.oss-cn-beijing.aliyuncs.com/avatar/95520dd8-c8d8-4ebf-9807-ea166a7bcf56.jpg","createTime":"2024-12-21 02:30:27","description":"探讨微服务架构的设计与实现方案","id":7,"labels":["SpringBoot"],"readingTime":7,"title":"微服务架构实践"},{"category":"运维部署","coverImage":"https://doctorpicture.oss-cn-beijing.aliyuncs.com/avatar/95520dd8-c8d8-4ebf-9807-ea166a7bcf56.jpg","createTime":"2024-12-21 02:31:05","description":"介绍主流的AI编程工具，如GitHub Copilot","id":8,"labels":["AI开发","Cursor"],"readingTime":8,"title":"AI编程助手指南"}]
2025-01-22 14:32:20,002 INFO  [http-nio-8085-exec-4] BLOG-SYSTEM-SQL.(): [93m>>>> 参数 = BlogArticleBasicInfo(id=null, title=null, description=null, readingTime=null, coverImage=null, articleStatus=null, createTime=null, isDeleted=0)[0m
2025-01-22 14:32:20,002 INFO  [http-nio-8085-exec-4] BLOG-SYSTEM-SQL.(): [93m>>>> 调用方法 = com.lj.blog.infra.basic.dao.BlogArticleBasicInfoDao.count[0m
2025-01-22 14:32:20,002 INFO  [http-nio-8085-exec-8] BLOG-SYSTEM-SQL.(): [93m>>>> 参数 = BlogArticleBasicInfo(id=null, title=null, description=null, readingTime=null, coverImage=null, articleStatus=null, createTime=null, isDeleted=0)[0m
2025-01-22 14:32:20,002 INFO  [http-nio-8085-exec-8] BLOG-SYSTEM-SQL.(): [93m>>>> 调用方法 = com.lj.blog.infra.basic.dao.BlogArticleBasicInfoDao.count[0m
2025-01-22 14:32:20,002 INFO  [http-nio-8085-exec-4] BLOG-SYSTEM-SQL.(): [93m>>>> 使用的完整的SQL:
select count(1) from blog_article_basic_info WHERE is_deleted = 0[0m
2025-01-22 14:32:20,002 INFO  [http-nio-8085-exec-8] BLOG-SYSTEM-SQL.(): [93m>>>> 使用的完整的SQL:
select count(1) from blog_article_basic_info WHERE is_deleted = 0[0m
2025-01-22 14:32:20,007 INFO  [http-nio-8085-exec-4] BLOG-SYSTEM-SQL.(): [32mSQL 执行时间:
2025-01-22 14:32:20,007 INFO  [http-nio-8085-exec-8] BLOG-SYSTEM-SQL.(): [32mSQL 执行时间:
2025-01-22 14:32:20,007 INFO  [http-nio-8085-exec-4] BLOG-SYSTEM-SQL.(): 方法: query
2025-01-22 14:32:20,007 INFO  [http-nio-8085-exec-8] BLOG-SYSTEM-SQL.(): 方法: query
2025-01-22 14:32:20,007 INFO  [http-nio-8085-exec-4] BLOG-SYSTEM-SQL.(): 执行时间: 4 ms
2025-01-22 14:32:20,007 INFO  [http-nio-8085-exec-8] BLOG-SYSTEM-SQL.(): 执行时间: 4 ms
2025-01-22 14:32:20,007 INFO  [http-nio-8085-exec-4] BLOG-SYSTEM-SQL.(): ========================================[0m
2025-01-22 14:32:20,007 INFO  [http-nio-8085-exec-8] BLOG-SYSTEM-SQL.(): ========================================[0m
2025-01-22 14:32:20,009 WARN  [http-nio-8085-exec-4] c.l.b.a.c.i.StatisticsAccessInterfaceTime.(): [93m执行时间过长：1177毫秒[0m
2025-01-22 14:32:20,009 INFO  [http-nio-8085-exec-8] c.l.b.a.c.i.StatisticsAccessInterfaceTime.(): [94m>>> 执行了：550毫秒[0m
2025-01-22 14:32:39,286 INFO  [http-nio-8085-exec-7] c.l.b.a.c.i.StatisticsAccessInterfaceTimeInterceptor.(): [96m>>>> 收到请求 - URI: /home/articles Method: POST Params: {}[0m
2025-01-22 14:32:39,291 INFO  [http-nio-8085-exec-7] c.l.b.d.s.i.BlogArticleBasicDomainServiceImp.(): BlogArticleBasicDomainServiceImp.getBlogArticleBasicInfo.pageRequest:{"offset":0,"pageNum":1,"pageSize":10}
2025-01-22 14:32:39,292 INFO  [http-nio-8085-exec-7] BLOG-SYSTEM-SQL.(): [93m>>>> 参数 = {blogArticleBasicInfo=null, pageRequest=com.lj.blog.common.result.PageRequest@30fd33e0, param1=null, param2=com.lj.blog.common.result.PageRequest@30fd33e0}[0m
2025-01-22 14:32:39,292 INFO  [http-nio-8085-exec-7] BLOG-SYSTEM-SQL.(): [93m>>>> 调用方法 = com.lj.blog.infra.basic.dao.BlogArticleBasicInfoDao.queryAllByLimit[0m
2025-01-22 14:32:39,292 INFO  [http-nio-8085-exec-7] BLOG-SYSTEM-SQL.(): [93m>>>> 使用的完整的SQL:
select id, title, descripti on, reading_time, cover_image, article_status, create_time, is_deleted from blog_article_basic_info LIMIT 10 OFFSET 0[0m
2025-01-22 14:32:39,298 INFO  [http-nio-8085-exec-7] BLOG-SYSTEM-SQL.(): [32mSQL 执行时间:
2025-01-22 14:32:39,298 INFO  [http-nio-8085-exec-7] BLOG-SYSTEM-SQL.(): 方法: query
2025-01-22 14:32:39,298 INFO  [http-nio-8085-exec-7] BLOG-SYSTEM-SQL.(): 执行时间: 5 ms
2025-01-22 14:32:39,299 INFO  [http-nio-8085-exec-7] BLOG-SYSTEM-SQL.(): ========================================[0m
2025-01-22 14:32:39,299 INFO  [http-nio-8085-exec-7] BLOG-SYSTEM-SQL.(): [93m>>>> 参数 = {articleIds=[1, 2, 3, 4, 5, 6, 7, 8], param1=[1, 2, 3, 4, 5, 6, 7, 8]}[0m
2025-01-22 14:32:39,299 INFO  [http-nio-8085-exec-7] BLOG-SYSTEM-SQL.(): [93m>>>> 调用方法 = com.lj.blog.infra.basic.dao.BlogArticleCategoryLabelMappingDao.queryByArticleIds[0m
2025-01-22 14:32:39,299 INFO  [http-nio-8085-exec-7] BLOG-SYSTEM-SQL.(): [93m>>>> 使用的完整的SQL:
select * from blog_article_categ ory_label_mapping where article_id in ( 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 )[0m
2025-01-22 14:32:39,304 INFO  [http-nio-8085-exec-7] BLOG-SYSTEM-SQL.(): [32mSQL 执行时间:
2025-01-22 14:32:39,304 INFO  [http-nio-8085-exec-7] BLOG-SYSTEM-SQL.(): 方法: query
2025-01-22 14:32:39,304 INFO  [http-nio-8085-exec-7] BLOG-SYSTEM-SQL.(): 执行时间: 5 ms
2025-01-22 14:32:39,304 INFO  [http-nio-8085-exec-7] BLOG-SYSTEM-SQL.(): ========================================[0m
2025-01-22 14:32:39,304 INFO  [http-nio-8085-exec-7] BLOG-SYSTEM-SQL.(): [93m>>>> 参数 = {ids=[1, 3, 4, 5, 6], param1=[1, 3, 4, 5, 6]}[0m
2025-01-22 14:32:39,304 INFO  [http-nio-8085-exec-7] BLOG-SYSTEM-SQL.(): [93m>>>> 调用方法 = com.lj.blog.infra.basic.dao.BlogCategoryDao.queryByIds[0m
2025-01-22 14:32:39,304 INFO  [http-nio-8085-exec-7] BLOG-SYSTEM-SQL.(): [93m>>>> 使用的完整的SQL:
select * from blog_categ ory where id in ( 1 , 3 , 4 , 5 , 6 ) and is_deleted = 0[0m
2025-01-22 14:32:39,310 INFO  [http-nio-8085-exec-7] BLOG-SYSTEM-SQL.(): [32mSQL 执行时间:
2025-01-22 14:32:39,310 INFO  [http-nio-8085-exec-7] BLOG-SYSTEM-SQL.(): 方法: query
2025-01-22 14:32:39,310 INFO  [http-nio-8085-exec-7] BLOG-SYSTEM-SQL.(): 执行时间: 4 ms
2025-01-22 14:32:39,310 INFO  [http-nio-8085-exec-7] BLOG-SYSTEM-SQL.(): ========================================[0m
2025-01-22 14:32:39,311 INFO  [http-nio-8085-exec-7] BLOG-SYSTEM-SQL.(): [93m>>>> 参数 = {ids=[1, 2, 3, 4, 5, 6, 7, 8, 9], param1=[1, 2, 3, 4, 5, 6, 7, 8, 9]}[0m
2025-01-22 14:32:39,311 INFO  [http-nio-8085-exec-7] BLOG-SYSTEM-SQL.(): [93m>>>> 调用方法 = com.lj.blog.infra.basic.dao.BlogLabelDao.queryByIds[0m
2025-01-22 14:32:39,311 INFO  [http-nio-8085-exec-7] BLOG-SYSTEM-SQL.(): [93m>>>> 使用的完整的SQL:
select * from blog_label where id in ( 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 )[0m
2025-01-22 14:32:39,313 INFO  [http-nio-8085-exec-7] BLOG-SYSTEM-SQL.(): [32mSQL 执行时间:
2025-01-22 14:32:39,313 INFO  [http-nio-8085-exec-7] BLOG-SYSTEM-SQL.(): 方法: query
2025-01-22 14:32:39,313 INFO  [http-nio-8085-exec-7] BLOG-SYSTEM-SQL.(): 执行时间: 3 ms
2025-01-22 14:32:39,313 INFO  [http-nio-8085-exec-7] BLOG-SYSTEM-SQL.(): ========================================[0m
2025-01-22 14:32:39,314 INFO  [http-nio-8085-exec-7] BLOG-SYSTEM-SQL.(): [93m>>>> 参数 = {ids=[1, 2, 3, 4, 5, 6, 7, 8], param1=[1, 2, 3, 4, 5, 6, 7, 8]}[0m
2025-01-22 14:32:39,314 INFO  [http-nio-8085-exec-7] BLOG-SYSTEM-SQL.(): [93m>>>> 调用方法 = com.lj.blog.infra.basic.dao.BlogArticleStatusDao.queryByIds[0m
2025-01-22 14:32:39,314 INFO  [http-nio-8085-exec-7] BLOG-SYSTEM-SQL.(): [93m>>>> 使用的完整的SQL:
select * from blog_article_status where id in ( 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 )[0m
2025-01-22 14:32:39,318 INFO  [http-nio-8085-exec-7] BLOG-SYSTEM-SQL.(): [32mSQL 执行时间:
2025-01-22 14:32:39,318 INFO  [http-nio-8085-exec-7] BLOG-SYSTEM-SQL.(): 方法: query
2025-01-22 14:32:39,318 INFO  [http-nio-8085-exec-7] BLOG-SYSTEM-SQL.(): 执行时间: 3 ms
2025-01-22 14:32:39,318 INFO  [http-nio-8085-exec-7] BLOG-SYSTEM-SQL.(): ========================================[0m
2025-01-22 14:32:39,318 INFO  [http-nio-8085-exec-7] c.l.b.d.s.i.BlogArticleBasicDomainServiceImp.(): BlogArticleBasicDomainServiceImp.getBlogArticleBasicInf.boList[BlogArticleBasicInfoBo(id=1, title=Vue3 基础教程, description=深入学习Vue3的核心概念和实践应用, coverImage=https://doctorpicture.oss-cn-beijing.aliyuncs.com/avatar/95520dd8-c8d8-4ebf-9807-ea166a7bcf56.jpg, createTime=Thu Dec 19 05:43:13 CST 2024, readingTime=5, category=前端开发, labels=[Vue3], likes=21, views=12, comments=0, collections=0), BlogArticleBasicInfoBo(id=2, title=TypeScript 入门指南, description=详解TypeScript的基本语法和高级特性, coverImage=https://doctorpicture.oss-cn-beijing.aliyuncs.com/avatar/95520dd8-c8d8-4ebf-9807-ea166a7bcf56.jpg, createTime=Fri Dec 20 07:24:28 CST 2024, readingTime=7, category=前端开发, labels=[Vue3, JavaScript], likes=null, views=null, comments=null, collections=null), BlogArticleBasicInfoBo(id=3, title=前端构建工具对比, description=深入对比Vite、Webpack和Rollup的特点和应用场景, coverImage=https://doctorpicture.oss-cn-beijing.aliyuncs.com/avatar/95520dd8-c8d8-4ebf-9807-ea166a7bcf56.jpg, createTime=Sat Dec 21 02:28:09 CST 2024, readingTime=6, category=前端开发, labels=[Vue3, Vite], likes=null, views=null, comments=null, collections=null), BlogArticleBasicInfoBo(id=4, title=Docker容器化实践, description=详细讲解Docker的基本概念和实际应用案例, coverImage=https://doctorpicture.oss-cn-beijing.aliyuncs.com/avatar/95520dd8-c8d8-4ebf-9807-ea166a7bcf56.jpg, createTime=Sat Dec 21 02:28:38 CST 2024, readingTime=8, category=数据库, labels=[Docker], likes=null, views=null, comments=null, collections=null), BlogArticleBasicInfoBo(id=5, title=React高级开发技巧, description=探索React的高级特性和性能优化方法, coverImage=https://doctorpicture.oss-cn-beijing.aliyuncs.com/avatar/95520dd8-c8d8-4ebf-9807-ea166a7bcf56.jpg, createTime=Sat Dec 21 02:29:19 CST 2024, readingTime=10, category=前端开发, labels=[React], likes=null, views=null, comments=null, collections=null), BlogArticleBasicInfoBo(id=6, title=MongoDB数据库入门, description=学习MongoDB的基础操作和实践应用, coverImage=https://doctorpicture.oss-cn-beijing.aliyuncs.com/avatar/95520dd8-c8d8-4ebf-9807-ea166a7bcf56.jpg, createTime=Sat Dec 21 02:29:54 CST 2024, readingTime=5, category=架构设计, labels=[MongoDB], likes=null, views=null, comments=null, collections=null), BlogArticleBasicInfoBo(id=7, title=微服务架构实践, description=探讨微服务架构的设计与实现方案, coverImage=https://doctorpicture.oss-cn-beijing.aliyuncs.com/avatar/95520dd8-c8d8-4ebf-9807-ea166a7bcf56.jpg, createTime=Sat Dec 21 02:30:27 CST 2024, readingTime=7, category=开发工具, labels=[SpringBoot], likes=null, views=null, comments=null, collections=null), BlogArticleBasicInfoBo(id=8, title=AI编程助手指南, description=介绍主流的AI编程工具，如GitHub Copilot, coverImage=https://doctorpicture.oss-cn-beijing.aliyuncs.com/avatar/95520dd8-c8d8-4ebf-9807-ea166a7bcf56.jpg, createTime=Sat Dec 21 02:31:05 CST 2024, readingTime=8, category=运维部署, labels=[AI开发, Cursor], likes=null, views=null, comments=null, collections=null)]
2025-01-22 14:32:39,320 INFO  [http-nio-8085-exec-7] c.l.b.a.c.c.BlogArticleInfoController.(): BlogArticleInfoController.getBlogArticleInfos.dto:[{"category":"前端开发","collections":0,"comments":0,"coverImage":"https://doctorpicture.oss-cn-beijing.aliyuncs.com/avatar/95520dd8-c8d8-4ebf-9807-ea166a7bcf56.jpg","createTime":"2024-12-19 05:43:13","description":"深入学习Vue3的核心概念和实践应用","id":1,"labels":["Vue3"],"likes":21,"readingTime":5,"title":"Vue3 基础教程","views":12},{"category":"前端开发","coverImage":"https://doctorpicture.oss-cn-beijing.aliyuncs.com/avatar/95520dd8-c8d8-4ebf-9807-ea166a7bcf56.jpg","createTime":"2024-12-20 07:24:28","description":"详解TypeScript的基本语法和高级特性","id":2,"labels":["Vue3","JavaScript"],"readingTime":7,"title":"TypeScript 入门指南"},{"category":"前端开发","coverImage":"https://doctorpicture.oss-cn-beijing.aliyuncs.com/avatar/95520dd8-c8d8-4ebf-9807-ea166a7bcf56.jpg","createTime":"2024-12-21 02:28:09","description":"深入对比Vite、Webpack和Rollup的特点和应用场景","id":3,"labels":["Vue3","Vite"],"readingTime":6,"title":"前端构建工具对比"},{"category":"数据库","coverImage":"https://doctorpicture.oss-cn-beijing.aliyuncs.com/avatar/95520dd8-c8d8-4ebf-9807-ea166a7bcf56.jpg","createTime":"2024-12-21 02:28:38","description":"详细讲解Docker的基本概念和实际应用案例","id":4,"labels":["Docker"],"readingTime":8,"title":"Docker容器化实践"},{"category":"前端开发","coverImage":"https://doctorpicture.oss-cn-beijing.aliyuncs.com/avatar/95520dd8-c8d8-4ebf-9807-ea166a7bcf56.jpg","createTime":"2024-12-21 02:29:19","description":"探索React的高级特性和性能优化方法","id":5,"labels":["React"],"readingTime":10,"title":"React高级开发技巧"},{"category":"架构设计","coverImage":"https://doctorpicture.oss-cn-beijing.aliyuncs.com/avatar/95520dd8-c8d8-4ebf-9807-ea166a7bcf56.jpg","createTime":"2024-12-21 02:29:54","description":"学习MongoDB的基础操作和实践应用","id":6,"labels":["MongoDB"],"readingTime":5,"title":"MongoDB数据库入门"},{"category":"开发工具","coverImage":"https://doctorpicture.oss-cn-beijing.aliyuncs.com/avatar/95520dd8-c8d8-4ebf-9807-ea166a7bcf56.jpg","createTime":"2024-12-21 02:30:27","description":"探讨微服务架构的设计与实现方案","id":7,"labels":["SpringBoot"],"readingTime":7,"title":"微服务架构实践"},{"category":"运维部署","coverImage":"https://doctorpicture.oss-cn-beijing.aliyuncs.com/avatar/95520dd8-c8d8-4ebf-9807-ea166a7bcf56.jpg","createTime":"2024-12-21 02:31:05","description":"介绍主流的AI编程工具，如GitHub Copilot","id":8,"labels":["AI开发","Cursor"],"readingTime":8,"title":"AI编程助手指南"}]
2025-01-22 14:32:39,320 INFO  [http-nio-8085-exec-7] BLOG-SYSTEM-SQL.(): [93m>>>> 参数 = BlogArticleBasicInfo(id=null, title=null, description=null, readingTime=null, coverImage=null, articleStatus=null, createTime=null, isDeleted=0)[0m
2025-01-22 14:32:39,320 INFO  [http-nio-8085-exec-7] BLOG-SYSTEM-SQL.(): [93m>>>> 调用方法 = com.lj.blog.infra.basic.dao.BlogArticleBasicInfoDao.count[0m
2025-01-22 14:32:39,321 INFO  [http-nio-8085-exec-7] BLOG-SYSTEM-SQL.(): [93m>>>> 使用的完整的SQL:
select count(1) from blog_article_basic_info WHERE is_deleted = 0[0m
2025-01-22 14:32:39,322 INFO  [http-nio-8085-exec-7] BLOG-SYSTEM-SQL.(): [32mSQL 执行时间:
2025-01-22 14:32:39,322 INFO  [http-nio-8085-exec-7] BLOG-SYSTEM-SQL.(): 方法: query
2025-01-22 14:32:39,322 INFO  [http-nio-8085-exec-7] BLOG-SYSTEM-SQL.(): 执行时间: 1 ms
2025-01-22 14:32:39,322 INFO  [http-nio-8085-exec-7] BLOG-SYSTEM-SQL.(): ========================================[0m
2025-01-22 14:32:39,322 INFO  [http-nio-8085-exec-7] c.l.b.a.c.i.StatisticsAccessInterfaceTime.(): [94m>>> 执行了：36毫秒[0m
2025-01-22 14:34:38,342 INFO  [http-nio-8085-exec-9] c.l.b.a.c.i.StatisticsAccessInterfaceTimeInterceptor.(): [96m>>>> 收到请求 - URI: /home/sentences Method: GET Params: {}[0m
2025-01-22 14:34:38,342 INFO  [http-nio-8085-exec-5] c.l.b.a.c.i.StatisticsAccessInterfaceTimeInterceptor.(): [96m>>>> 收到请求 - URI: /home/articles Method: POST Params: {}[0m
2025-01-22 14:34:38,342 INFO  [http-nio-8085-exec-9] BLOG-SYSTEM-SQL.(): [93m>>>> 参数 = BlogContentItems(id=null, type=null, content=null, createTime=null, updateTime=null, isDeleted=0)[0m
2025-01-22 14:34:38,342 INFO  [http-nio-8085-exec-9] BLOG-SYSTEM-SQL.(): [93m>>>> 调用方法 = com.lj.blog.infra.basic.dao.BlogContentItemsDao.queryPrimary[0m
2025-01-22 14:34:38,342 INFO  [http-nio-8085-exec-9] BLOG-SYSTEM-SQL.(): [93m>>>> 使用的完整的SQL:
select * from blog_c ontent_items[0m
2025-01-22 14:34:38,355 INFO  [http-nio-8085-exec-5] c.l.b.d.s.i.BlogArticleBasicDomainServiceImp.(): BlogArticleBasicDomainServiceImp.getBlogArticleBasicInfo.pageRequest:{"offset":0,"pageNum":1,"pageSize":10}
2025-01-22 14:34:38,356 INFO  [http-nio-8085-exec-5] BLOG-SYSTEM-SQL.(): [93m>>>> 参数 = {blogArticleBasicInfo=null, pageRequest=com.lj.blog.common.result.PageRequest@d630ee, param1=null, param2=com.lj.blog.common.result.PageRequest@d630ee}[0m
2025-01-22 14:34:38,356 INFO  [http-nio-8085-exec-5] BLOG-SYSTEM-SQL.(): [93m>>>> 调用方法 = com.lj.blog.infra.basic.dao.BlogArticleBasicInfoDao.queryAllByLimit[0m
2025-01-22 14:34:38,356 INFO  [http-nio-8085-exec-5] BLOG-SYSTEM-SQL.(): [93m>>>> 使用的完整的SQL:
select id, title, descripti on, reading_time, cover_image, article_status, create_time, is_deleted from blog_article_basic_info LIMIT 10 OFFSET 0[0m
2025-01-22 14:34:38,357 INFO  [http-nio-8085-exec-9] BLOG-SYSTEM-SQL.(): [32mSQL 执行时间:
2025-01-22 14:34:38,357 INFO  [http-nio-8085-exec-9] BLOG-SYSTEM-SQL.(): 方法: query
2025-01-22 14:34:38,357 INFO  [http-nio-8085-exec-9] BLOG-SYSTEM-SQL.(): 执行时间: 14 ms
2025-01-22 14:34:38,357 INFO  [http-nio-8085-exec-9] BLOG-SYSTEM-SQL.(): ========================================[0m
2025-01-22 14:34:38,357 INFO  [http-nio-8085-exec-9] c.l.b.d.s.i.BlogContentItemsDomainServiceImp.(): BlogContentItemsDomainServiceImp.getAllSentences.boList:[{"content":"Wonder your life","type":1},{"content":"探索编程的无限可能","type":0},{"content":"Together, We Can Achieve More","type":0},{"content":"Success Starts with Self-Belief","type":0},{"content":"Every Day is a New Opportunity","type":0},{"content":"Turn Your Dreams into Plans","type":0},{"content":"用代码改变世界","type":0},{"content":"ljBlog. All Rights Reserved. 版权所有","type":2},{"content":"在 技术的海洋中探索前行，分享知识的乐趣，共同成长的喜悦","type":3}]
2025-01-22 14:34:38,357 INFO  [http-nio-8085-exec-9] c.l.b.a.c.i.StatisticsAccessInterfaceTime.(): [94m>>> 执行了：15毫秒[0m
2025-01-22 14:34:38,360 INFO  [http-nio-8085-exec-5] BLOG-SYSTEM-SQL.(): [32mSQL 执行时间:
2025-01-22 14:34:38,360 INFO  [http-nio-8085-exec-5] BLOG-SYSTEM-SQL.(): 方法: query
2025-01-22 14:34:38,360 INFO  [http-nio-8085-exec-5] BLOG-SYSTEM-SQL.(): 执行时间: 4 ms
2025-01-22 14:34:38,360 INFO  [http-nio-8085-exec-5] BLOG-SYSTEM-SQL.(): ========================================[0m
2025-01-22 14:34:38,360 INFO  [http-nio-8085-exec-5] BLOG-SYSTEM-SQL.(): [93m>>>> 参数 = {articleIds=[1, 2, 3, 4, 5, 6, 7, 8], param1=[1, 2, 3, 4, 5, 6, 7, 8]}[0m
2025-01-22 14:34:38,360 INFO  [http-nio-8085-exec-5] BLOG-SYSTEM-SQL.(): [93m>>>> 调用方法 = com.lj.blog.infra.basic.dao.BlogArticleCategoryLabelMappingDao.queryByArticleIds[0m
2025-01-22 14:34:38,362 INFO  [http-nio-8085-exec-5] BLOG-SYSTEM-SQL.(): [93m>>>> 使用的完整的SQL:
select * from blog_article_categ ory_label_mapping where article_id in ( 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 )[0m
2025-01-22 14:34:38,365 INFO  [http-nio-8085-exec-5] BLOG-SYSTEM-SQL.(): [32mSQL 执行时间:
2025-01-22 14:34:38,365 INFO  [http-nio-8085-exec-5] BLOG-SYSTEM-SQL.(): 方法: query
2025-01-22 14:34:38,365 INFO  [http-nio-8085-exec-5] BLOG-SYSTEM-SQL.(): 执行时间: 3 ms
2025-01-22 14:34:38,365 INFO  [http-nio-8085-exec-5] BLOG-SYSTEM-SQL.(): ========================================[0m
2025-01-22 14:34:38,365 INFO  [http-nio-8085-exec-5] BLOG-SYSTEM-SQL.(): [93m>>>> 参数 = {ids=[1, 3, 4, 5, 6], param1=[1, 3, 4, 5, 6]}[0m
2025-01-22 14:34:38,365 INFO  [http-nio-8085-exec-5] BLOG-SYSTEM-SQL.(): [93m>>>> 调用方法 = com.lj.blog.infra.basic.dao.BlogCategoryDao.queryByIds[0m
2025-01-22 14:34:38,365 INFO  [http-nio-8085-exec-5] BLOG-SYSTEM-SQL.(): [93m>>>> 使用的完整的SQL:
select * from blog_categ ory where id in ( 1 , 3 , 4 , 5 , 6 ) and is_deleted = 0[0m
2025-01-22 14:34:38,369 INFO  [http-nio-8085-exec-5] BLOG-SYSTEM-SQL.(): [32mSQL 执行时间:
2025-01-22 14:34:38,369 INFO  [http-nio-8085-exec-5] BLOG-SYSTEM-SQL.(): 方法: query
2025-01-22 14:34:38,369 INFO  [http-nio-8085-exec-5] BLOG-SYSTEM-SQL.(): 执行时间: 3 ms
2025-01-22 14:34:38,369 INFO  [http-nio-8085-exec-5] BLOG-SYSTEM-SQL.(): ========================================[0m
2025-01-22 14:34:38,370 INFO  [http-nio-8085-exec-5] BLOG-SYSTEM-SQL.(): [93m>>>> 参数 = {ids=[1, 2, 3, 4, 5, 6, 7, 8, 9], param1=[1, 2, 3, 4, 5, 6, 7, 8, 9]}[0m
2025-01-22 14:34:38,370 INFO  [http-nio-8085-exec-5] BLOG-SYSTEM-SQL.(): [93m>>>> 调用方法 = com.lj.blog.infra.basic.dao.BlogLabelDao.queryByIds[0m
2025-01-22 14:34:38,370 INFO  [http-nio-8085-exec-5] BLOG-SYSTEM-SQL.(): [93m>>>> 使用的完整的SQL:
select * from blog_label where id in ( 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 )[0m
2025-01-22 14:34:38,373 INFO  [http-nio-8085-exec-5] BLOG-SYSTEM-SQL.(): [32mSQL 执行时间:
2025-01-22 14:34:38,373 INFO  [http-nio-8085-exec-5] BLOG-SYSTEM-SQL.(): 方法: query
2025-01-22 14:34:38,373 INFO  [http-nio-8085-exec-5] BLOG-SYSTEM-SQL.(): 执行时间: 3 ms
2025-01-22 14:34:38,373 INFO  [http-nio-8085-exec-5] BLOG-SYSTEM-SQL.(): ========================================[0m
2025-01-22 14:34:38,373 INFO  [http-nio-8085-exec-5] BLOG-SYSTEM-SQL.(): [93m>>>> 参数 = {ids=[1, 2, 3, 4, 5, 6, 7, 8], param1=[1, 2, 3, 4, 5, 6, 7, 8]}[0m
2025-01-22 14:34:38,373 INFO  [http-nio-8085-exec-5] BLOG-SYSTEM-SQL.(): [93m>>>> 调用方法 = com.lj.blog.infra.basic.dao.BlogArticleStatusDao.queryByIds[0m
2025-01-22 14:34:38,373 INFO  [http-nio-8085-exec-5] BLOG-SYSTEM-SQL.(): [93m>>>> 使用的完整的SQL:
select * from blog_article_status where id in ( 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 )[0m
2025-01-22 14:34:38,377 INFO  [http-nio-8085-exec-5] BLOG-SYSTEM-SQL.(): [32mSQL 执行时间:
2025-01-22 14:34:38,377 INFO  [http-nio-8085-exec-5] BLOG-SYSTEM-SQL.(): 方法: query
2025-01-22 14:34:38,377 INFO  [http-nio-8085-exec-5] BLOG-SYSTEM-SQL.(): 执行时间: 2 ms
2025-01-22 14:34:38,377 INFO  [http-nio-8085-exec-5] BLOG-SYSTEM-SQL.(): ========================================[0m
2025-01-22 14:34:38,377 INFO  [http-nio-8085-exec-5] c.l.b.d.s.i.BlogArticleBasicDomainServiceImp.(): BlogArticleBasicDomainServiceImp.getBlogArticleBasicInf.boList[BlogArticleBasicInfoBo(id=1, title=Vue3 基础教程, description=深入学习Vue3的核心概念和实践应用, coverImage=https://doctorpicture.oss-cn-beijing.aliyuncs.com/avatar/95520dd8-c8d8-4ebf-9807-ea166a7bcf56.jpg, createTime=Thu Dec 19 05:43:13 CST 2024, readingTime=5, category=前端开发, labels=[Vue3], likes=21, views=12, comments=0, collections=0), BlogArticleBasicInfoBo(id=2, title=TypeScript 入门指南, description=详解TypeScript的基本语法和高级特性, coverImage=https://doctorpicture.oss-cn-beijing.aliyuncs.com/avatar/95520dd8-c8d8-4ebf-9807-ea166a7bcf56.jpg, createTime=Fri Dec 20 07:24:28 CST 2024, readingTime=7, category=前端开发, labels=[Vue3, JavaScript], likes=null, views=null, comments=null, collections=null), BlogArticleBasicInfoBo(id=3, title=前端构建工具对比, description=深入对比Vite、Webpack和Rollup的特点和应用场景, coverImage=https://doctorpicture.oss-cn-beijing.aliyuncs.com/avatar/95520dd8-c8d8-4ebf-9807-ea166a7bcf56.jpg, createTime=Sat Dec 21 02:28:09 CST 2024, readingTime=6, category=前端开发, labels=[Vue3, Vite], likes=null, views=null, comments=null, collections=null), BlogArticleBasicInfoBo(id=4, title=Docker容器化实践, description=详细讲解Docker的基本概念和实际应用案例, coverImage=https://doctorpicture.oss-cn-beijing.aliyuncs.com/avatar/95520dd8-c8d8-4ebf-9807-ea166a7bcf56.jpg, createTime=Sat Dec 21 02:28:38 CST 2024, readingTime=8, category=数据库, labels=[Docker], likes=null, views=null, comments=null, collections=null), BlogArticleBasicInfoBo(id=5, title=React高级开发技巧, description=探索React的高级特性和性能优化方法, coverImage=https://doctorpicture.oss-cn-beijing.aliyuncs.com/avatar/95520dd8-c8d8-4ebf-9807-ea166a7bcf56.jpg, createTime=Sat Dec 21 02:29:19 CST 2024, readingTime=10, category=前端开发, labels=[React], likes=null, views=null, comments=null, collections=null), BlogArticleBasicInfoBo(id=6, title=MongoDB数据库入门, description=学习MongoDB的基础操作和实践应用, coverImage=https://doctorpicture.oss-cn-beijing.aliyuncs.com/avatar/95520dd8-c8d8-4ebf-9807-ea166a7bcf56.jpg, createTime=Sat Dec 21 02:29:54 CST 2024, readingTime=5, category=架构设计, labels=[MongoDB], likes=null, views=null, comments=null, collections=null), BlogArticleBasicInfoBo(id=7, title=微服务架构实践, description=探讨微服务架构的设计与实现方案, coverImage=https://doctorpicture.oss-cn-beijing.aliyuncs.com/avatar/95520dd8-c8d8-4ebf-9807-ea166a7bcf56.jpg, createTime=Sat Dec 21 02:30:27 CST 2024, readingTime=7, category=开发工具, labels=[SpringBoot], likes=null, views=null, comments=null, collections=null), BlogArticleBasicInfoBo(id=8, title=AI编程助手指南, description=介绍主流的AI编程工具，如GitHub Copilot, coverImage=https://doctorpicture.oss-cn-beijing.aliyuncs.com/avatar/95520dd8-c8d8-4ebf-9807-ea166a7bcf56.jpg, createTime=Sat Dec 21 02:31:05 CST 2024, readingTime=8, category=运维部署, labels=[AI开发, Cursor], likes=null, views=null, comments=null, collections=null)]
2025-01-22 14:34:38,378 INFO  [http-nio-8085-exec-5] c.l.b.a.c.c.BlogArticleInfoController.(): BlogArticleInfoController.getBlogArticleInfos.dto:[{"category":"前端开发","collections":0,"comments":0,"coverImage":"https://doctorpicture.oss-cn-beijing.aliyuncs.com/avatar/95520dd8-c8d8-4ebf-9807-ea166a7bcf56.jpg","createTime":"2024-12-19 05:43:13","description":"深入学习Vue3的核心概念和实践应用","id":1,"labels":["Vue3"],"likes":21,"readingTime":5,"title":"Vue3 基础教程","views":12},{"category":"前端开发","coverImage":"https://doctorpicture.oss-cn-beijing.aliyuncs.com/avatar/95520dd8-c8d8-4ebf-9807-ea166a7bcf56.jpg","createTime":"2024-12-20 07:24:28","description":"详解TypeScript的基本语法和高级特性","id":2,"labels":["Vue3","JavaScript"],"readingTime":7,"title":"TypeScript 入门指南"},{"category":"前端开发","coverImage":"https://doctorpicture.oss-cn-beijing.aliyuncs.com/avatar/95520dd8-c8d8-4ebf-9807-ea166a7bcf56.jpg","createTime":"2024-12-21 02:28:09","description":"深入对比Vite、Webpack和Rollup的特点和应用场景","id":3,"labels":["Vue3","Vite"],"readingTime":6,"title":"前端构建工具对比"},{"category":"数据库","coverImage":"https://doctorpicture.oss-cn-beijing.aliyuncs.com/avatar/95520dd8-c8d8-4ebf-9807-ea166a7bcf56.jpg","createTime":"2024-12-21 02:28:38","description":"详细讲解Docker的基本概念和实际应用案例","id":4,"labels":["Docker"],"readingTime":8,"title":"Docker容器化实践"},{"category":"前端开发","coverImage":"https://doctorpicture.oss-cn-beijing.aliyuncs.com/avatar/95520dd8-c8d8-4ebf-9807-ea166a7bcf56.jpg","createTime":"2024-12-21 02:29:19","description":"探索React的高级特性和性能优化方法","id":5,"labels":["React"],"readingTime":10,"title":"React高级开发技巧"},{"category":"架构设计","coverImage":"https://doctorpicture.oss-cn-beijing.aliyuncs.com/avatar/95520dd8-c8d8-4ebf-9807-ea166a7bcf56.jpg","createTime":"2024-12-21 02:29:54","description":"学习MongoDB的基础操作和实践应用","id":6,"labels":["MongoDB"],"readingTime":5,"title":"MongoDB数据库入门"},{"category":"开发工具","coverImage":"https://doctorpicture.oss-cn-beijing.aliyuncs.com/avatar/95520dd8-c8d8-4ebf-9807-ea166a7bcf56.jpg","createTime":"2024-12-21 02:30:27","description":"探讨微服务架构的设计与实现方案","id":7,"labels":["SpringBoot"],"readingTime":7,"title":"微服务架构实践"},{"category":"运维部署","coverImage":"https://doctorpicture.oss-cn-beijing.aliyuncs.com/avatar/95520dd8-c8d8-4ebf-9807-ea166a7bcf56.jpg","createTime":"2024-12-21 02:31:05","description":"介绍主流的AI编程工具，如GitHub Copilot","id":8,"labels":["AI开发","Cursor"],"readingTime":8,"title":"AI编程助手指南"}]
2025-01-22 14:34:38,379 INFO  [http-nio-8085-exec-5] BLOG-SYSTEM-SQL.(): [93m>>>> 参数 = BlogArticleBasicInfo(id=null, title=null, description=null, readingTime=null, coverImage=null, articleStatus=null, createTime=null, isDeleted=0)[0m
2025-01-22 14:34:38,379 INFO  [http-nio-8085-exec-5] BLOG-SYSTEM-SQL.(): [93m>>>> 调用方法 = com.lj.blog.infra.basic.dao.BlogArticleBasicInfoDao.count[0m
2025-01-22 14:34:38,379 INFO  [http-nio-8085-exec-5] BLOG-SYSTEM-SQL.(): [93m>>>> 使用的完整的SQL:
select count(1) from blog_article_basic_info WHERE is_deleted = 0[0m
2025-01-22 14:34:38,380 INFO  [http-nio-8085-exec-5] BLOG-SYSTEM-SQL.(): [32mSQL 执行时间:
2025-01-22 14:34:38,380 INFO  [http-nio-8085-exec-5] BLOG-SYSTEM-SQL.(): 方法: query
2025-01-22 14:34:38,380 INFO  [http-nio-8085-exec-5] BLOG-SYSTEM-SQL.(): 执行时间: 1 ms
2025-01-22 14:34:38,380 INFO  [http-nio-8085-exec-5] BLOG-SYSTEM-SQL.(): ========================================[0m
2025-01-22 14:34:38,380 INFO  [http-nio-8085-exec-5] c.l.b.a.c.i.StatisticsAccessInterfaceTime.(): [94m>>> 执行了：38毫秒[0m
