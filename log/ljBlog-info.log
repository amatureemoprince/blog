2025-02-04 08:06:29,436 INFO  [SpringApplicationShutdownHook] c.a.d.p.DruidDataSource.(): {dataSource-1} closing ...
2025-02-04 08:06:29,441 INFO  [SpringApplicationShutdownHook] c.a.d.p.DruidDataSource.(): {dataSource-1} closed
2025-02-04 08:06:40,837 INFO  [background-preinit] o.h.v.i.u.Version.(): HV000001: Hibernate Validator 8.0.1.Final
2025-02-04 08:06:40,867 INFO  [main] c.l.b.BlogApplication.(): Starting BlogApplication using Java 17.0.5 with PID 29060 (G:\SpringBootProduct\Blog\lj-blog-starter\target\classes started by PC in G:\SpringBootProduct\Blog)
2025-02-04 08:06:40,871 INFO  [main] c.l.b.BlogApplication.(): No active profile set, falling back to 1 default profile: "default"
2025-02-04 08:06:41,029 WARN  [main] o.s.c.a.AnnotationTypeMapping.(): Support for convention-based annotation attribute overrides is deprecated and will be removed in Spring Framework 6.2. Please annotate the following attributes in @com.lj.blog.common.annotation.SaUserCheckPermission with appropriate @AliasFor declarations: [mode, orRole]
2025-02-04 08:06:41,073 WARN  [main] o.s.c.a.AnnotationTypeMapping.(): Support for convention-based annotation attribute overrides is deprecated and will be removed in Spring Framework 6.2. Please annotate the following attributes in @cn.hutool.core.annotation.AliasFor with appropriate @AliasFor declarations: [annotation, attribute]
2025-02-04 08:06:41,710 INFO  [main] o.s.d.r.c.RepositoryConfigurationDelegate.(): Multiple Spring Data modules found, entering strict repository configuration mode
2025-02-04 08:06:41,715 INFO  [main] o.s.d.r.c.RepositoryConfigurationDelegate.(): Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-02-04 08:06:41,771 INFO  [main] o.s.d.r.c.RepositoryConfigurationDelegate.(): Finished Spring Data repository scanning in 36 ms. Found 0 Redis repository interfaces.
2025-02-04 08:06:42,376 INFO  [main] o.s.b.w.e.t.TomcatWebServer.(): Tomcat initialized with port 8085 (http)
2025-02-04 08:06:42,386 INFO  [main] o.a.c.h.Http11NioProtocol.(): Initializing ProtocolHandler ["http-nio-8085"]
2025-02-04 08:06:42,391 INFO  [main] o.a.c.c.StandardService.(): Starting service [Tomcat]
2025-02-04 08:06:42,391 INFO  [main] o.a.c.c.StandardEngine.(): Starting Servlet engine: [Apache Tomcat/10.1.31]
2025-02-04 08:06:42,452 INFO  [main] o.a.c.c.C.[.[.[/].(): Initializing Spring embedded WebApplicationContext
2025-02-04 08:06:42,452 INFO  [main] o.s.b.w.s.c.ServletWebServerApplicationContext.(): Root WebApplicationContext: initialization completed in 1529 ms
2025-02-04 08:06:44,183 INFO  [main] c.l.b.d.h.f.PermissionOrRoleFactory.(): 装配 PermissionOrRoleFactory 工厂咯
2025-02-04 08:06:44,187 INFO  [main] c.l.b.d.h.f.PermissionOrRoleFactory.(): PermissionOrRoleFactory 初始化完成，包含 2 个 handler
2025-02-04 08:06:44,205 WARN  [main] o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext.(): Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'registerEvent' defined in file [G:\SpringBootProduct\Blog\lj-blog-common\target\classes\com\lj\blog\common\event\RegisterEvent.class]: Unsatisfied dependency expressed through constructor parameter 0: No qualifying bean of type 'java.lang.Object' available: more than one 'primary' bean found among candidates: [org.springframework.context.annotation.internalConfigurationAnnotationProcessor, org.springframework.context.annotation.internalAutowiredAnnotationProcessor, org.springframework.context.annotation.internalCommonAnnotationProcessor, org.springframework.context.event.internalEventListenerProcessor, org.springframework.context.event.internalEventListenerFactory, blogApplication, org.springframework.boot.autoconfigure.internalCachingMetadataReaderFactory, globalConfig, swaggerConfig, blogArticleInfoController, blogContentItemsController, blogStatusController, blogUserGetInfoController, userAvatarController, userLoginController, userRegisterController, blogArticleBasicInfoConvertImpl, blogContentItemConvertImpl, blogUserConvertImpl, saTokenValidateInterceptor, statisticsAccessInterfaceTime, stpInterfaceImpl, ossController, redisController, testController, blogAdminRoleService, blogArticleBasicInfoService, blogArticleCategoryLabelMappingService, blogArticleContentService, blogArticleStatusService, blogCategoryService, blogContentItemsService, blogLabelService, blogPermissionService, blogRolePermissionService, blogRoleService, blogUserRoleService, blogUserService, mybatisConfiguration, sqlStatementInterceptor, minioConfig, redisConfig, saTokenConfig, registerEventHandler, globalException, publisher, mailUtils, minioUtils, redisUtils, emailController, blogArticleInfoBoConvertImpl, blogContentItemBoConvertImpl, blogUserInfoBoConvertImpl, permissionOrRoleFactory, adminPermissionOrRoleHandler, userPermissionOrRoleHandler, blogArticleBasicDomainServiceImp, blogContentItemsDomainServiceImp, blogFileDomainServiceImp, blogPermissionDomainServiceImp, blogRoleDomainServiceImp, blogUserDomainServiceImp, articleUtils, com.github.xiaoymin.knife4j.spring.configuration.Knife4jAutoConfiguration, knife4jOpenApiCustomizer, knife4jJakartaOperationCustomizer, org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor, org.springframework.boot.context.internalConfigurationPropertiesBinder, org.springframework.boot.context.properties.BoundConfigurationProperties, org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar.methodValidationExcludeFilter, knife4j.setting-com.github.xiaoymin.knife4j.spring.configuration.Knife4jSetting, knife4j.basic-com.github.xiaoymin.knife4j.spring.configuration.Knife4jHttpBasic, knife4j-com.github.xiaoymin.knife4j.spring.configuration.Knife4jProperties, swaggerOpenApi, mybatisPlusInterceptor, minioClient, redisTemplate, org.springframework.scheduling.annotation.ProxyAsyncConfiguration, org.springframework.context.annotation.internalAsyncAnnotationProcessor, org.springframework.boot.autoconfigure.AutoConfigurationPackages, com.lj.blog.BlogApplication#MapperScannerRegistrar#0, org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration, propertySourcesPlaceholderConfigurer, org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration, fileWatcher, sslPropertiesSslBundleRegistrar, sslBundleRegistry, spring.ssl-org.springframework.boot.autoconfigure.ssl.SslProperties, org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration, websocketServletWebServerCustomizer, org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration, org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat, tomcatServletWebServerFactory, org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration, servletWebServerFactoryCustomizer, tomcatServletWebServerFactoryCustomizer, server-org.springframework.boot.autoconfigure.web.ServerProperties, webServerFactoryCustomizerBeanPostProcessor, errorPageRegistrarBeanPostProcessor, org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration, dispatcherServlet, spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties, org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration, dispatcherServletRegistration, org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration, org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$ThreadPoolTaskExecutorBuilderConfiguration, threadPoolTaskExecutorBuilder, org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$TaskExecutorBuilderConfiguration, taskExecutorBuilder, org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$SimpleAsyncTaskExecutorBuilderConfiguration, simpleAsyncTaskExecutorBuilder, org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$TaskExecutorConfiguration, applicationTaskExecutor, org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration, spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties, org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration, defaultValidator, methodValidationPostProcessor, org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration, error, beanNameViewResolver, org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration, conventionErrorViewResolver, spring.web-org.springframework.boot.autoconfigure.web.WebProperties, org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration, errorAttributes, basicErrorController, errorPageCustomizer, preserveErrorControllerTargetClassPostProcessor, org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration, welcomePageHandlerMapping, welcomePageNotAcceptableHandlerMapping, localeResolver, themeResolver, flashMapManager, mvcConversionService, mvcValidator, mvcContentNegotiationManager, requestMappingHandlerMapping, mvcPatternParser, mvcUrlPathHelper, mvcPathMatcher, viewControllerHandlerMapping, beanNameHandlerMapping, routerFunctionMapping, resourceHandlerMapping, mvcResourceUrlProvider, defaultServletHandlerMapping, requestMappingHandlerAdapter, handlerFunctionAdapter, mvcUriComponentsContributor, httpRequestHandlerAdapter, simpleControllerHandlerAdapter, handlerExceptionResolver, mvcViewResolver, mvcHandlerMappingIntrospector, viewNameTranslator, org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter, defaultViewResolver, viewResolver, requestContextFilter, org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration, formContentFilter, cn.dev33.satoken.dao.SaTokenDaoRedisJackson, cn.dev33.satoken.spring.SaBeanInject, cn.dev33.satoken.spring.SaBeanRegister, getSaTokenConfig, getSaJsonTemplateForJackson, getApplicationContextPathLoading, cn.dev33.satoken.spring.SaTokenContextRegister, getSaTokenContextForSpringInJakartaServlet, saPathCheckFilterForJakartaServlet, cn.hutool.extra.spring.SpringUtil, com.baomidou.mybatisplus.autoconfigure.DdlAutoConfiguration, com.baomidou.mybatisplus.autoconfigure.MybatisPlusLanguageDriverAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic, dataSource, org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari, org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceConfiguration, jdbcConnectionDetails, org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration, hikariPoolDataSourceMetadataProvider, org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties, com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration, sqlSessionFactory, sqlSessionTemplate, mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties, org.springdoc.core.configuration.SpringDocConfiguration$QuerydslProvider, queryDslQuerydslPredicateOperationCustomizer, org.springdoc.core.configuration.SpringDocConfiguration$OpenApiResourceAdvice, org.springdoc.core.configuration.SpringDocConfiguration$SpringDocWebFluxSupportConfiguration, webFluxSupportConverter, org.springdoc.core.configuration.SpringDocConfiguration$SpringDocSpringDataWebPropertiesProvider, springDataWebPropertiesProvider, org.springdoc.core.configuration.SpringDocConfiguration$WebConversionServiceConfiguration, webConversionServiceProvider, org.springdoc.core.configuration.SpringDocConfiguration, springdocBeanFactoryPostProcessor, localSpringDocParameterNameDiscoverer, additionalModelsConverter, fileSupportConverter, responseSupportConverter, schemaPropertyDeprecatingConverter, polymorphicModelConverter, openAPIBuilder, modelConverterRegistrar, operationBuilder, propertyResolverUtils, requestBodyBuilder, securityParser, genericReturnTypeParser, parameterBuilder, springDocProviders, springdocObjectMapperProvider, springDocCustomizers, org.springdoc.core.configuration.SpringDocKotlinConfiguration, kotlinCoroutinesReturnTypeParser, nullableKotlinRequestParameterCustomizer, org.springdoc.core.configuration.SpringDocPageableConfiguration, pageableOpenAPIConverter, pageOpenAPIConverter, delegatingMethodParameterCustomizer, org.springdoc.core.configuration.SpringDocSortConfiguration, sortOpenAPIConverter, org.springdoc.core.configuration.SpringDocUIConfiguration, org.springdoc.core.properties.SpringDocConfigProperties, org.springdoc.core.properties.SwaggerUiConfigParameters, org.springdoc.core.properties.SwaggerUiConfigProperties, org.springdoc.core.properties.SwaggerUiOAuthProperties, org.springdoc.webmvc.core.configuration.MultipleOpenApiSupportConfiguration, multipleOpenApiResource, org.springdoc.webmvc.core.configuration.SpringDocWebMvcConfiguration$SpringDocWebMvcRouterConfiguration, routerFunctionProvider, org.springdoc.webmvc.core.configuration.SpringDocWebMvcConfiguration, openApiResource, requestBuilder, springWebProvider, responseBuilder, org.springdoc.webmvc.ui.SwaggerConfig, swaggerWelcome, swaggerConfigResource, indexPageTransformer, swaggerWebMvcConfigurer, swaggerResourceResolver, org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration, mbeanExporter, objectNamingStrategy, mbeanServer, spring.jmx-org.springframework.boot.autoconfigure.jmx.JmxProperties, org.springframework.boot.autoconfigure.admin.SpringApplicationAdminJmxAutoConfiguration, springApplicationAdminRegistrar, org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$ClassProxyingConfiguration, forceAutoProxyCreatorToUseClassProxying, org.springframework.boot.autoconfigure.aop.AopAutoConfiguration, org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration, applicationAvailability, org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration, lettuceClientResources, redisConnectionFactory, org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration, redisConnectionDetails, stringRedisTemplate, spring.data.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties, org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration, standardJacksonObjectMapperBuilderCustomizer, spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties, org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration, jacksonObjectMapperBuilder, org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration, parameterNamesModule, org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration, jacksonObjectMapper, org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonMixinConfiguration, jsonMixinModuleEntries, jsonMixinModule, org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration, jsonComponentModule, org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizationAutoConfiguration, platformTransactionManagerCustomizers, transactionExecutionListeners, spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties, org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration, org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration, lifecycleProcessor, spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties, org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration, persistenceExceptionTranslationPostProcessor, org.springframework.boot.autoconfigure.data.redis.RedisReactiveAutoConfiguration, reactiveRedisTemplate, reactiveStringRedisTemplate, org.springframework.boot.autoconfigure.data.redis.RedisRepositoriesAutoConfiguration, redisIndexConfiguration#0, redisKeyspaceConfiguration#0, redisMappingConfiguration#0, keyValueMappingContext, redisCustomConversions, redisReferenceResolver, redisConverter, redisKeyValueAdapter, redisKeyValueTemplate, data-redis.repository-aot-processor#0, org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration, gsonBuilder, gson, standardGsonBuilderCustomizer, spring.gson-org.springframework.boot.autoconfigure.gson.GsonProperties, org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration, stringHttpMessageConverter, org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration, mappingJackson2HttpMessageConverter, org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration, org.springframework.boot.autoconfigure.http.GsonHttpMessageConvertersConfiguration, org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration, messageConverters, org.springframework.data.web.config.ProjectingArgumentResolverRegistrar, projectingArgumentResolverBeanPostProcessor, org.springframework.data.web.config.SpringDataWebConfiguration, pageableResolver, sortResolver, offsetResolver, org.springframework.data.web.config.SpringDataJacksonConfiguration, jacksonGeoModule, pageModule, org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration, pageableCustomizer, sortCustomizer, spring.data.web-org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties, org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration, spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration, jdbcTemplate, org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration, namedParameterJdbcTemplate, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties, org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer$DependsOnDatabaseInitializationPostProcessor, org.springframework.boot.autoconfigure.jdbc.JdbcClientAutoConfiguration, jdbcClient, org.springframework.boot.autoconfigure.mail.MailSenderPropertiesConfiguration, mailSender, org.springframework.boot.autoconfigure.mail.MailSenderAutoConfiguration, spring.mail-org.springframework.boot.autoconfigure.mail.MailProperties, org.springframework.boot.autoconfigure.mail.MailSenderValidatorAutoConfiguration, org.springframework.boot.autoconfigure.netty.NettyAutoConfiguration, spring.netty-org.springframework.boot.autoconfigure.netty.NettyProperties, org.springframework.boot.autoconfigure.reactor.ReactorAutoConfiguration, spring.reactor-org.springframework.boot.autoconfigure.reactor.ReactorProperties, org.springframework.boot.autoconfigure.sql.init.DataSourceInitializationConfiguration, dataSourceScriptDatabaseInitializer, org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration, spring.sql.init-org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties, org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$ThreadPoolTaskSchedulerBuilderConfiguration, threadPoolTaskSchedulerBuilder, org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$TaskSchedulerBuilderConfiguration, taskSchedulerBuilder, org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$SimpleAsyncTaskSchedulerBuilderConfiguration, simpleAsyncTaskSchedulerBuilder, org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration, spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties, org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration$ThymeleafViewResolverConfiguration, thymeleafViewResolver, org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration, org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration, defaultTemplateResolver, org.springframework.boot.autoconfigure.thymeleaf.TemplateEngineConfigurations$DefaultTemplateEngineConfiguration, templateEngine, org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration, spring.thymeleaf-org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$JdbcTransactionManagerConfiguration, transactionManager, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration, org.springframework.transaction.config.internalTransactionAdvisor, transactionAttributeSource, transactionInterceptor, org.springframework.transaction.config.internalTransactionalEventListenerFactory, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration$CglibAutoProxyConfiguration, org.springframework.aop.config.internalAutoProxyCreator, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration, transactionTemplate, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.autoconfigure.web.client.RestClientAutoConfiguration, httpMessageConvertersRestClientCustomizer, restClientSsl, restClientBuilderConfigurer, restClientBuilder, org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration, restTemplateBuilderConfigurer, restTemplateBuilder, org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration, tomcatWebServerFactoryCustomizer, org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration, org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration, characterEncodingFilter, localeCharsetMappingsCustomizer, org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration, multipartConfigElement, multipartResolver, spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties, blogAdminRoleDao, blogArticleBasicInfoDao, blogArticleCategoryLabelMappingDao, blogArticleContentDao, blogArticleStatusDao, blogCategoryDao, blogContentItemsDao, blogLabelDao, blogPermissionDao, blogRoleDao, blogRolePermissionDao, blogUserDao, blogUserRoleDao, org.springframework.boot.context.ContextIdApplicationContextInitializer$ContextId, autoConfigurationReport, springApplicationArguments, springBootBanner, springBootLoggingSystem, springBootLoggerGroups, springBootLoggingLifecycle, environment, systemProperties, systemEnvironment, applicationStartup, org.springframework.context.annotation.ConfigurationClassPostProcessor.importRegistry, 邮箱模块, 博客主体逻辑模块, messageSource, applicationEventMulticaster, servletContext, contextParameters, contextAttributes, webServerGracefulShutdown, webServerStartStop]
2025-02-04 08:06:44,214 INFO  [main] c.a.d.p.DruidDataSource.(): {dataSource-0} closing ...
2025-02-04 08:06:44,216 INFO  [main] o.a.c.c.StandardService.(): Stopping service [Tomcat]
2025-02-04 08:06:44,239 INFO  [main] o.s.b.a.l.ConditionEvaluationReportLogger.(): 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-02-04 08:06:44,251 ERROR [main] o.s.b.SpringApplication.(): Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'registerEvent' defined in file [G:\SpringBootProduct\Blog\lj-blog-common\target\classes\com\lj\blog\common\event\RegisterEvent.class]: Unsatisfied dependency expressed through constructor parameter 0: No qualifying bean of type 'java.lang.Object' available: more than one 'primary' bean found among candidates: [org.springframework.context.annotation.internalConfigurationAnnotationProcessor, org.springframework.context.annotation.internalAutowiredAnnotationProcessor, org.springframework.context.annotation.internalCommonAnnotationProcessor, org.springframework.context.event.internalEventListenerProcessor, org.springframework.context.event.internalEventListenerFactory, blogApplication, org.springframework.boot.autoconfigure.internalCachingMetadataReaderFactory, globalConfig, swaggerConfig, blogArticleInfoController, blogContentItemsController, blogStatusController, blogUserGetInfoController, userAvatarController, userLoginController, userRegisterController, blogArticleBasicInfoConvertImpl, blogContentItemConvertImpl, blogUserConvertImpl, saTokenValidateInterceptor, statisticsAccessInterfaceTime, stpInterfaceImpl, ossController, redisController, testController, blogAdminRoleService, blogArticleBasicInfoService, blogArticleCategoryLabelMappingService, blogArticleContentService, blogArticleStatusService, blogCategoryService, blogContentItemsService, blogLabelService, blogPermissionService, blogRolePermissionService, blogRoleService, blogUserRoleService, blogUserService, mybatisConfiguration, sqlStatementInterceptor, minioConfig, redisConfig, saTokenConfig, registerEventHandler, globalException, publisher, mailUtils, minioUtils, redisUtils, emailController, blogArticleInfoBoConvertImpl, blogContentItemBoConvertImpl, blogUserInfoBoConvertImpl, permissionOrRoleFactory, adminPermissionOrRoleHandler, userPermissionOrRoleHandler, blogArticleBasicDomainServiceImp, blogContentItemsDomainServiceImp, blogFileDomainServiceImp, blogPermissionDomainServiceImp, blogRoleDomainServiceImp, blogUserDomainServiceImp, articleUtils, com.github.xiaoymin.knife4j.spring.configuration.Knife4jAutoConfiguration, knife4jOpenApiCustomizer, knife4jJakartaOperationCustomizer, org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor, org.springframework.boot.context.internalConfigurationPropertiesBinder, org.springframework.boot.context.properties.BoundConfigurationProperties, org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar.methodValidationExcludeFilter, knife4j.setting-com.github.xiaoymin.knife4j.spring.configuration.Knife4jSetting, knife4j.basic-com.github.xiaoymin.knife4j.spring.configuration.Knife4jHttpBasic, knife4j-com.github.xiaoymin.knife4j.spring.configuration.Knife4jProperties, swaggerOpenApi, mybatisPlusInterceptor, minioClient, redisTemplate, org.springframework.scheduling.annotation.ProxyAsyncConfiguration, org.springframework.context.annotation.internalAsyncAnnotationProcessor, org.springframework.boot.autoconfigure.AutoConfigurationPackages, com.lj.blog.BlogApplication#MapperScannerRegistrar#0, org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration, propertySourcesPlaceholderConfigurer, org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration, fileWatcher, sslPropertiesSslBundleRegistrar, sslBundleRegistry, spring.ssl-org.springframework.boot.autoconfigure.ssl.SslProperties, org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration, websocketServletWebServerCustomizer, org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration, org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat, tomcatServletWebServerFactory, org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration, servletWebServerFactoryCustomizer, tomcatServletWebServerFactoryCustomizer, server-org.springframework.boot.autoconfigure.web.ServerProperties, webServerFactoryCustomizerBeanPostProcessor, errorPageRegistrarBeanPostProcessor, org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration, dispatcherServlet, spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties, org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration, dispatcherServletRegistration, org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration, org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$ThreadPoolTaskExecutorBuilderConfiguration, threadPoolTaskExecutorBuilder, org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$TaskExecutorBuilderConfiguration, taskExecutorBuilder, org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$SimpleAsyncTaskExecutorBuilderConfiguration, simpleAsyncTaskExecutorBuilder, org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$TaskExecutorConfiguration, applicationTaskExecutor, org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration, spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties, org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration, defaultValidator, methodValidationPostProcessor, org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration, error, beanNameViewResolver, org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration, conventionErrorViewResolver, spring.web-org.springframework.boot.autoconfigure.web.WebProperties, org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration, errorAttributes, basicErrorController, errorPageCustomizer, preserveErrorControllerTargetClassPostProcessor, org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration, welcomePageHandlerMapping, welcomePageNotAcceptableHandlerMapping, localeResolver, themeResolver, flashMapManager, mvcConversionService, mvcValidator, mvcContentNegotiationManager, requestMappingHandlerMapping, mvcPatternParser, mvcUrlPathHelper, mvcPathMatcher, viewControllerHandlerMapping, beanNameHandlerMapping, routerFunctionMapping, resourceHandlerMapping, mvcResourceUrlProvider, defaultServletHandlerMapping, requestMappingHandlerAdapter, handlerFunctionAdapter, mvcUriComponentsContributor, httpRequestHandlerAdapter, simpleControllerHandlerAdapter, handlerExceptionResolver, mvcViewResolver, mvcHandlerMappingIntrospector, viewNameTranslator, org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter, defaultViewResolver, viewResolver, requestContextFilter, org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration, formContentFilter, cn.dev33.satoken.dao.SaTokenDaoRedisJackson, cn.dev33.satoken.spring.SaBeanInject, cn.dev33.satoken.spring.SaBeanRegister, getSaTokenConfig, getSaJsonTemplateForJackson, getApplicationContextPathLoading, cn.dev33.satoken.spring.SaTokenContextRegister, getSaTokenContextForSpringInJakartaServlet, saPathCheckFilterForJakartaServlet, cn.hutool.extra.spring.SpringUtil, com.baomidou.mybatisplus.autoconfigure.DdlAutoConfiguration, com.baomidou.mybatisplus.autoconfigure.MybatisPlusLanguageDriverAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic, dataSource, org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari, org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceConfiguration, jdbcConnectionDetails, org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration, hikariPoolDataSourceMetadataProvider, org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties, com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration, sqlSessionFactory, sqlSessionTemplate, mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties, org.springdoc.core.configuration.SpringDocConfiguration$QuerydslProvider, queryDslQuerydslPredicateOperationCustomizer, org.springdoc.core.configuration.SpringDocConfiguration$OpenApiResourceAdvice, org.springdoc.core.configuration.SpringDocConfiguration$SpringDocWebFluxSupportConfiguration, webFluxSupportConverter, org.springdoc.core.configuration.SpringDocConfiguration$SpringDocSpringDataWebPropertiesProvider, springDataWebPropertiesProvider, org.springdoc.core.configuration.SpringDocConfiguration$WebConversionServiceConfiguration, webConversionServiceProvider, org.springdoc.core.configuration.SpringDocConfiguration, springdocBeanFactoryPostProcessor, localSpringDocParameterNameDiscoverer, additionalModelsConverter, fileSupportConverter, responseSupportConverter, schemaPropertyDeprecatingConverter, polymorphicModelConverter, openAPIBuilder, modelConverterRegistrar, operationBuilder, propertyResolverUtils, requestBodyBuilder, securityParser, genericReturnTypeParser, parameterBuilder, springDocProviders, springdocObjectMapperProvider, springDocCustomizers, org.springdoc.core.configuration.SpringDocKotlinConfiguration, kotlinCoroutinesReturnTypeParser, nullableKotlinRequestParameterCustomizer, org.springdoc.core.configuration.SpringDocPageableConfiguration, pageableOpenAPIConverter, pageOpenAPIConverter, delegatingMethodParameterCustomizer, org.springdoc.core.configuration.SpringDocSortConfiguration, sortOpenAPIConverter, org.springdoc.core.configuration.SpringDocUIConfiguration, org.springdoc.core.properties.SpringDocConfigProperties, org.springdoc.core.properties.SwaggerUiConfigParameters, org.springdoc.core.properties.SwaggerUiConfigProperties, org.springdoc.core.properties.SwaggerUiOAuthProperties, org.springdoc.webmvc.core.configuration.MultipleOpenApiSupportConfiguration, multipleOpenApiResource, org.springdoc.webmvc.core.configuration.SpringDocWebMvcConfiguration$SpringDocWebMvcRouterConfiguration, routerFunctionProvider, org.springdoc.webmvc.core.configuration.SpringDocWebMvcConfiguration, openApiResource, requestBuilder, springWebProvider, responseBuilder, org.springdoc.webmvc.ui.SwaggerConfig, swaggerWelcome, swaggerConfigResource, indexPageTransformer, swaggerWebMvcConfigurer, swaggerResourceResolver, org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration, mbeanExporter, objectNamingStrategy, mbeanServer, spring.jmx-org.springframework.boot.autoconfigure.jmx.JmxProperties, org.springframework.boot.autoconfigure.admin.SpringApplicationAdminJmxAutoConfiguration, springApplicationAdminRegistrar, org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$ClassProxyingConfiguration, forceAutoProxyCreatorToUseClassProxying, org.springframework.boot.autoconfigure.aop.AopAutoConfiguration, org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration, applicationAvailability, org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration, lettuceClientResources, redisConnectionFactory, org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration, redisConnectionDetails, stringRedisTemplate, spring.data.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties, org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration, standardJacksonObjectMapperBuilderCustomizer, spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties, org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration, jacksonObjectMapperBuilder, org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration, parameterNamesModule, org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration, jacksonObjectMapper, org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonMixinConfiguration, jsonMixinModuleEntries, jsonMixinModule, org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration, jsonComponentModule, org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizationAutoConfiguration, platformTransactionManagerCustomizers, transactionExecutionListeners, spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties, org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration, org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration, lifecycleProcessor, spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties, org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration, persistenceExceptionTranslationPostProcessor, org.springframework.boot.autoconfigure.data.redis.RedisReactiveAutoConfiguration, reactiveRedisTemplate, reactiveStringRedisTemplate, org.springframework.boot.autoconfigure.data.redis.RedisRepositoriesAutoConfiguration, redisIndexConfiguration#0, redisKeyspaceConfiguration#0, redisMappingConfiguration#0, keyValueMappingContext, redisCustomConversions, redisReferenceResolver, redisConverter, redisKeyValueAdapter, redisKeyValueTemplate, data-redis.repository-aot-processor#0, org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration, gsonBuilder, gson, standardGsonBuilderCustomizer, spring.gson-org.springframework.boot.autoconfigure.gson.GsonProperties, org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration, stringHttpMessageConverter, org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration, mappingJackson2HttpMessageConverter, org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration, org.springframework.boot.autoconfigure.http.GsonHttpMessageConvertersConfiguration, org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration, messageConverters, org.springframework.data.web.config.ProjectingArgumentResolverRegistrar, projectingArgumentResolverBeanPostProcessor, org.springframework.data.web.config.SpringDataWebConfiguration, pageableResolver, sortResolver, offsetResolver, org.springframework.data.web.config.SpringDataJacksonConfiguration, jacksonGeoModule, pageModule, org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration, pageableCustomizer, sortCustomizer, spring.data.web-org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties, org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration, spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration, jdbcTemplate, org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration, namedParameterJdbcTemplate, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties, org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer$DependsOnDatabaseInitializationPostProcessor, org.springframework.boot.autoconfigure.jdbc.JdbcClientAutoConfiguration, jdbcClient, org.springframework.boot.autoconfigure.mail.MailSenderPropertiesConfiguration, mailSender, org.springframework.boot.autoconfigure.mail.MailSenderAutoConfiguration, spring.mail-org.springframework.boot.autoconfigure.mail.MailProperties, org.springframework.boot.autoconfigure.mail.MailSenderValidatorAutoConfiguration, org.springframework.boot.autoconfigure.netty.NettyAutoConfiguration, spring.netty-org.springframework.boot.autoconfigure.netty.NettyProperties, org.springframework.boot.autoconfigure.reactor.ReactorAutoConfiguration, spring.reactor-org.springframework.boot.autoconfigure.reactor.ReactorProperties, org.springframework.boot.autoconfigure.sql.init.DataSourceInitializationConfiguration, dataSourceScriptDatabaseInitializer, org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration, spring.sql.init-org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties, org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$ThreadPoolTaskSchedulerBuilderConfiguration, threadPoolTaskSchedulerBuilder, org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$TaskSchedulerBuilderConfiguration, taskSchedulerBuilder, org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$SimpleAsyncTaskSchedulerBuilderConfiguration, simpleAsyncTaskSchedulerBuilder, org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration, spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties, org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration$ThymeleafViewResolverConfiguration, thymeleafViewResolver, org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration, org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration, defaultTemplateResolver, org.springframework.boot.autoconfigure.thymeleaf.TemplateEngineConfigurations$DefaultTemplateEngineConfiguration, templateEngine, org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration, spring.thymeleaf-org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$JdbcTransactionManagerConfiguration, transactionManager, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration, org.springframework.transaction.config.internalTransactionAdvisor, transactionAttributeSource, transactionInterceptor, org.springframework.transaction.config.internalTransactionalEventListenerFactory, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration$CglibAutoProxyConfiguration, org.springframework.aop.config.internalAutoProxyCreator, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration, transactionTemplate, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.autoconfigure.web.client.RestClientAutoConfiguration, httpMessageConvertersRestClientCustomizer, restClientSsl, restClientBuilderConfigurer, restClientBuilder, org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration, restTemplateBuilderConfigurer, restTemplateBuilder, org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration, tomcatWebServerFactoryCustomizer, org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration, org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration, characterEncodingFilter, localeCharsetMappingsCustomizer, org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration, multipartConfigElement, multipartResolver, spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties, blogAdminRoleDao, blogArticleBasicInfoDao, blogArticleCategoryLabelMappingDao, blogArticleContentDao, blogArticleStatusDao, blogCategoryDao, blogContentItemsDao, blogLabelDao, blogPermissionDao, blogRoleDao, blogRolePermissionDao, blogUserDao, blogUserRoleDao, org.springframework.boot.context.ContextIdApplicationContextInitializer$ContextId, autoConfigurationReport, springApplicationArguments, springBootBanner, springBootLoggingSystem, springBootLoggerGroups, springBootLoggingLifecycle, environment, systemProperties, systemEnvironment, applicationStartup, org.springframework.context.annotation.ConfigurationClassPostProcessor.importRegistry, 邮箱模块, 博客主体逻辑模块, messageSource, applicationEventMulticaster, servletContext, contextParameters, contextAttributes, webServerGracefulShutdown, webServerStartStop]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) ~[spring-beans-6.1.14.jar:6.1.14]
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237) ~[spring-beans-6.1.14.jar:6.1.14]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375) ~[spring-beans-6.1.14.jar:6.1.14]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212) ~[spring-beans-6.1.14.jar:6.1.14]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562) ~[spring-beans-6.1.14.jar:6.1.14]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.14.jar:6.1.14]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.14.jar:6.1.14]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.14.jar:6.1.14]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.14.jar:6.1.14]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.14.jar:6.1.14]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975) ~[spring-beans-6.1.14.jar:6.1.14]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971) ~[spring-context-6.1.14.jar:6.1.14]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625) ~[spring-context-6.1.14.jar:6.1.14]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) ~[spring-boot-3.3.5.jar:3.3.5]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) [spring-boot-3.3.5.jar:3.3.5]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456) [spring-boot-3.3.5.jar:3.3.5]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335) [spring-boot-3.3.5.jar:3.3.5]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363) [spring-boot-3.3.5.jar:3.3.5]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352) [spring-boot-3.3.5.jar:3.3.5]
	at com.lj.blog.BlogApplication.main(BlogApplication.java:17) [classes/:?]
Caused by: org.springframework.beans.factory.NoUniqueBeanDefinitionException: No qualifying bean of type 'java.lang.Object' available: more than one 'primary' bean found among candidates: [org.springframework.context.annotation.internalConfigurationAnnotationProcessor, org.springframework.context.annotation.internalAutowiredAnnotationProcessor, org.springframework.context.annotation.internalCommonAnnotationProcessor, org.springframework.context.event.internalEventListenerProcessor, org.springframework.context.event.internalEventListenerFactory, blogApplication, org.springframework.boot.autoconfigure.internalCachingMetadataReaderFactory, globalConfig, swaggerConfig, blogArticleInfoController, blogContentItemsController, blogStatusController, blogUserGetInfoController, userAvatarController, userLoginController, userRegisterController, blogArticleBasicInfoConvertImpl, blogContentItemConvertImpl, blogUserConvertImpl, saTokenValidateInterceptor, statisticsAccessInterfaceTime, stpInterfaceImpl, ossController, redisController, testController, blogAdminRoleService, blogArticleBasicInfoService, blogArticleCategoryLabelMappingService, blogArticleContentService, blogArticleStatusService, blogCategoryService, blogContentItemsService, blogLabelService, blogPermissionService, blogRolePermissionService, blogRoleService, blogUserRoleService, blogUserService, mybatisConfiguration, sqlStatementInterceptor, minioConfig, redisConfig, saTokenConfig, registerEventHandler, globalException, publisher, mailUtils, minioUtils, redisUtils, emailController, blogArticleInfoBoConvertImpl, blogContentItemBoConvertImpl, blogUserInfoBoConvertImpl, permissionOrRoleFactory, adminPermissionOrRoleHandler, userPermissionOrRoleHandler, blogArticleBasicDomainServiceImp, blogContentItemsDomainServiceImp, blogFileDomainServiceImp, blogPermissionDomainServiceImp, blogRoleDomainServiceImp, blogUserDomainServiceImp, articleUtils, com.github.xiaoymin.knife4j.spring.configuration.Knife4jAutoConfiguration, knife4jOpenApiCustomizer, knife4jJakartaOperationCustomizer, org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor, org.springframework.boot.context.internalConfigurationPropertiesBinder, org.springframework.boot.context.properties.BoundConfigurationProperties, org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar.methodValidationExcludeFilter, knife4j.setting-com.github.xiaoymin.knife4j.spring.configuration.Knife4jSetting, knife4j.basic-com.github.xiaoymin.knife4j.spring.configuration.Knife4jHttpBasic, knife4j-com.github.xiaoymin.knife4j.spring.configuration.Knife4jProperties, swaggerOpenApi, mybatisPlusInterceptor, minioClient, redisTemplate, org.springframework.scheduling.annotation.ProxyAsyncConfiguration, org.springframework.context.annotation.internalAsyncAnnotationProcessor, org.springframework.boot.autoconfigure.AutoConfigurationPackages, com.lj.blog.BlogApplication#MapperScannerRegistrar#0, org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration, propertySourcesPlaceholderConfigurer, org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration, fileWatcher, sslPropertiesSslBundleRegistrar, sslBundleRegistry, spring.ssl-org.springframework.boot.autoconfigure.ssl.SslProperties, org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration, websocketServletWebServerCustomizer, org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration, org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat, tomcatServletWebServerFactory, org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration, servletWebServerFactoryCustomizer, tomcatServletWebServerFactoryCustomizer, server-org.springframework.boot.autoconfigure.web.ServerProperties, webServerFactoryCustomizerBeanPostProcessor, errorPageRegistrarBeanPostProcessor, org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration, dispatcherServlet, spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties, org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration, dispatcherServletRegistration, org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration, org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$ThreadPoolTaskExecutorBuilderConfiguration, threadPoolTaskExecutorBuilder, org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$TaskExecutorBuilderConfiguration, taskExecutorBuilder, org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$SimpleAsyncTaskExecutorBuilderConfiguration, simpleAsyncTaskExecutorBuilder, org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$TaskExecutorConfiguration, applicationTaskExecutor, org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration, spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties, org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration, defaultValidator, methodValidationPostProcessor, org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration, error, beanNameViewResolver, org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration, conventionErrorViewResolver, spring.web-org.springframework.boot.autoconfigure.web.WebProperties, org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration, errorAttributes, basicErrorController, errorPageCustomizer, preserveErrorControllerTargetClassPostProcessor, org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration, welcomePageHandlerMapping, welcomePageNotAcceptableHandlerMapping, localeResolver, themeResolver, flashMapManager, mvcConversionService, mvcValidator, mvcContentNegotiationManager, requestMappingHandlerMapping, mvcPatternParser, mvcUrlPathHelper, mvcPathMatcher, viewControllerHandlerMapping, beanNameHandlerMapping, routerFunctionMapping, resourceHandlerMapping, mvcResourceUrlProvider, defaultServletHandlerMapping, requestMappingHandlerAdapter, handlerFunctionAdapter, mvcUriComponentsContributor, httpRequestHandlerAdapter, simpleControllerHandlerAdapter, handlerExceptionResolver, mvcViewResolver, mvcHandlerMappingIntrospector, viewNameTranslator, org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter, defaultViewResolver, viewResolver, requestContextFilter, org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration, formContentFilter, cn.dev33.satoken.dao.SaTokenDaoRedisJackson, cn.dev33.satoken.spring.SaBeanInject, cn.dev33.satoken.spring.SaBeanRegister, getSaTokenConfig, getSaJsonTemplateForJackson, getApplicationContextPathLoading, cn.dev33.satoken.spring.SaTokenContextRegister, getSaTokenContextForSpringInJakartaServlet, saPathCheckFilterForJakartaServlet, cn.hutool.extra.spring.SpringUtil, com.baomidou.mybatisplus.autoconfigure.DdlAutoConfiguration, com.baomidou.mybatisplus.autoconfigure.MybatisPlusLanguageDriverAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic, dataSource, org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari, org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceConfiguration, jdbcConnectionDetails, org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration, hikariPoolDataSourceMetadataProvider, org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties, com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration, sqlSessionFactory, sqlSessionTemplate, mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties, org.springdoc.core.configuration.SpringDocConfiguration$QuerydslProvider, queryDslQuerydslPredicateOperationCustomizer, org.springdoc.core.configuration.SpringDocConfiguration$OpenApiResourceAdvice, org.springdoc.core.configuration.SpringDocConfiguration$SpringDocWebFluxSupportConfiguration, webFluxSupportConverter, org.springdoc.core.configuration.SpringDocConfiguration$SpringDocSpringDataWebPropertiesProvider, springDataWebPropertiesProvider, org.springdoc.core.configuration.SpringDocConfiguration$WebConversionServiceConfiguration, webConversionServiceProvider, org.springdoc.core.configuration.SpringDocConfiguration, springdocBeanFactoryPostProcessor, localSpringDocParameterNameDiscoverer, additionalModelsConverter, fileSupportConverter, responseSupportConverter, schemaPropertyDeprecatingConverter, polymorphicModelConverter, openAPIBuilder, modelConverterRegistrar, operationBuilder, propertyResolverUtils, requestBodyBuilder, securityParser, genericReturnTypeParser, parameterBuilder, springDocProviders, springdocObjectMapperProvider, springDocCustomizers, org.springdoc.core.configuration.SpringDocKotlinConfiguration, kotlinCoroutinesReturnTypeParser, nullableKotlinRequestParameterCustomizer, org.springdoc.core.configuration.SpringDocPageableConfiguration, pageableOpenAPIConverter, pageOpenAPIConverter, delegatingMethodParameterCustomizer, org.springdoc.core.configuration.SpringDocSortConfiguration, sortOpenAPIConverter, org.springdoc.core.configuration.SpringDocUIConfiguration, org.springdoc.core.properties.SpringDocConfigProperties, org.springdoc.core.properties.SwaggerUiConfigParameters, org.springdoc.core.properties.SwaggerUiConfigProperties, org.springdoc.core.properties.SwaggerUiOAuthProperties, org.springdoc.webmvc.core.configuration.MultipleOpenApiSupportConfiguration, multipleOpenApiResource, org.springdoc.webmvc.core.configuration.SpringDocWebMvcConfiguration$SpringDocWebMvcRouterConfiguration, routerFunctionProvider, org.springdoc.webmvc.core.configuration.SpringDocWebMvcConfiguration, openApiResource, requestBuilder, springWebProvider, responseBuilder, org.springdoc.webmvc.ui.SwaggerConfig, swaggerWelcome, swaggerConfigResource, indexPageTransformer, swaggerWebMvcConfigurer, swaggerResourceResolver, org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration, mbeanExporter, objectNamingStrategy, mbeanServer, spring.jmx-org.springframework.boot.autoconfigure.jmx.JmxProperties, org.springframework.boot.autoconfigure.admin.SpringApplicationAdminJmxAutoConfiguration, springApplicationAdminRegistrar, org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$ClassProxyingConfiguration, forceAutoProxyCreatorToUseClassProxying, org.springframework.boot.autoconfigure.aop.AopAutoConfiguration, org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration, applicationAvailability, org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration, lettuceClientResources, redisConnectionFactory, org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration, redisConnectionDetails, stringRedisTemplate, spring.data.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties, org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration, standardJacksonObjectMapperBuilderCustomizer, spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties, org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration, jacksonObjectMapperBuilder, org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration, parameterNamesModule, org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration, jacksonObjectMapper, org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonMixinConfiguration, jsonMixinModuleEntries, jsonMixinModule, org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration, jsonComponentModule, org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizationAutoConfiguration, platformTransactionManagerCustomizers, transactionExecutionListeners, spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties, org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration, org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration, lifecycleProcessor, spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties, org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration, persistenceExceptionTranslationPostProcessor, org.springframework.boot.autoconfigure.data.redis.RedisReactiveAutoConfiguration, reactiveRedisTemplate, reactiveStringRedisTemplate, org.springframework.boot.autoconfigure.data.redis.RedisRepositoriesAutoConfiguration, redisIndexConfiguration#0, redisKeyspaceConfiguration#0, redisMappingConfiguration#0, keyValueMappingContext, redisCustomConversions, redisReferenceResolver, redisConverter, redisKeyValueAdapter, redisKeyValueTemplate, data-redis.repository-aot-processor#0, org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration, gsonBuilder, gson, standardGsonBuilderCustomizer, spring.gson-org.springframework.boot.autoconfigure.gson.GsonProperties, org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration, stringHttpMessageConverter, org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration, mappingJackson2HttpMessageConverter, org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration, org.springframework.boot.autoconfigure.http.GsonHttpMessageConvertersConfiguration, org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration, messageConverters, org.springframework.data.web.config.ProjectingArgumentResolverRegistrar, projectingArgumentResolverBeanPostProcessor, org.springframework.data.web.config.SpringDataWebConfiguration, pageableResolver, sortResolver, offsetResolver, org.springframework.data.web.config.SpringDataJacksonConfiguration, jacksonGeoModule, pageModule, org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration, pageableCustomizer, sortCustomizer, spring.data.web-org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties, org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration, spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration, jdbcTemplate, org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration, namedParameterJdbcTemplate, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties, org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer$DependsOnDatabaseInitializationPostProcessor, org.springframework.boot.autoconfigure.jdbc.JdbcClientAutoConfiguration, jdbcClient, org.springframework.boot.autoconfigure.mail.MailSenderPropertiesConfiguration, mailSender, org.springframework.boot.autoconfigure.mail.MailSenderAutoConfiguration, spring.mail-org.springframework.boot.autoconfigure.mail.MailProperties, org.springframework.boot.autoconfigure.mail.MailSenderValidatorAutoConfiguration, org.springframework.boot.autoconfigure.netty.NettyAutoConfiguration, spring.netty-org.springframework.boot.autoconfigure.netty.NettyProperties, org.springframework.boot.autoconfigure.reactor.ReactorAutoConfiguration, spring.reactor-org.springframework.boot.autoconfigure.reactor.ReactorProperties, org.springframework.boot.autoconfigure.sql.init.DataSourceInitializationConfiguration, dataSourceScriptDatabaseInitializer, org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration, spring.sql.init-org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties, org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$ThreadPoolTaskSchedulerBuilderConfiguration, threadPoolTaskSchedulerBuilder, org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$TaskSchedulerBuilderConfiguration, taskSchedulerBuilder, org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$SimpleAsyncTaskSchedulerBuilderConfiguration, simpleAsyncTaskSchedulerBuilder, org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration, spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties, org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration$ThymeleafViewResolverConfiguration, thymeleafViewResolver, org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration, org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration, defaultTemplateResolver, org.springframework.boot.autoconfigure.thymeleaf.TemplateEngineConfigurations$DefaultTemplateEngineConfiguration, templateEngine, org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration, spring.thymeleaf-org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$JdbcTransactionManagerConfiguration, transactionManager, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration, org.springframework.transaction.config.internalTransactionAdvisor, transactionAttributeSource, transactionInterceptor, org.springframework.transaction.config.internalTransactionalEventListenerFactory, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration$CglibAutoProxyConfiguration, org.springframework.aop.config.internalAutoProxyCreator, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration, transactionTemplate, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.autoconfigure.web.client.RestClientAutoConfiguration, httpMessageConvertersRestClientCustomizer, restClientSsl, restClientBuilderConfigurer, restClientBuilder, org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration, restTemplateBuilderConfigurer, restTemplateBuilder, org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration, tomcatWebServerFactoryCustomizer, org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration, org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration, characterEncodingFilter, localeCharsetMappingsCustomizer, org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration, multipartConfigElement, multipartResolver, spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties, blogAdminRoleDao, blogArticleBasicInfoDao, blogArticleCategoryLabelMappingDao, blogArticleContentDao, blogArticleStatusDao, blogCategoryDao, blogContentItemsDao, blogLabelDao, blogPermissionDao, blogRoleDao, blogRolePermissionDao, blogUserDao, blogUserRoleDao, org.springframework.boot.context.ContextIdApplicationContextInitializer$ContextId, autoConfigurationReport, springApplicationArguments, springBootBanner, springBootLoggingSystem, springBootLoggerGroups, springBootLoggingLifecycle, environment, systemProperties, systemEnvironment, applicationStartup, org.springframework.context.annotation.ConfigurationClassPostProcessor.importRegistry, 邮箱模块, 博客主体逻辑模块, messageSource, applicationEventMulticaster, servletContext, contextParameters, contextAttributes, webServerGracefulShutdown, webServerStartStop]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.determinePrimaryCandidate(DefaultListableBeanFactory.java:1755) ~[spring-beans-6.1.14.jar:6.1.14]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.determineAutowireCandidate(DefaultListableBeanFactory.java:1715) ~[spring-beans-6.1.14.jar:6.1.14]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1416) ~[spring-beans-6.1.14.jar:6.1.14]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.14.jar:6.1.14]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904) ~[spring-beans-6.1.14.jar:6.1.14]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782) ~[spring-beans-6.1.14.jar:6.1.14]
	... 19 more
2025-02-04 08:16:35,261 INFO  [background-preinit] o.h.v.i.u.Version.(): HV000001: Hibernate Validator 8.0.1.Final
2025-02-04 08:16:35,288 INFO  [main] c.l.b.BlogApplication.(): Starting BlogApplication using Java 17.0.5 with PID 18520 (G:\SpringBootProduct\Blog\lj-blog-starter\target\classes started by PC in G:\SpringBootProduct\Blog)
2025-02-04 08:16:35,290 INFO  [main] c.l.b.BlogApplication.(): No active profile set, falling back to 1 default profile: "default"
2025-02-04 08:16:35,435 WARN  [main] o.s.c.a.AnnotationTypeMapping.(): Support for convention-based annotation attribute overrides is deprecated and will be removed in Spring Framework 6.2. Please annotate the following attributes in @com.lj.blog.common.annotation.SaUserCheckPermission with appropriate @AliasFor declarations: [mode, orRole]
2025-02-04 08:16:35,496 WARN  [main] o.s.c.a.AnnotationTypeMapping.(): Support for convention-based annotation attribute overrides is deprecated and will be removed in Spring Framework 6.2. Please annotate the following attributes in @cn.hutool.core.annotation.AliasFor with appropriate @AliasFor declarations: [annotation, attribute]
2025-02-04 08:16:36,059 INFO  [main] o.s.d.r.c.RepositoryConfigurationDelegate.(): Multiple Spring Data modules found, entering strict repository configuration mode
2025-02-04 08:16:36,061 INFO  [main] o.s.d.r.c.RepositoryConfigurationDelegate.(): Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-02-04 08:16:36,098 INFO  [main] o.s.d.r.c.RepositoryConfigurationDelegate.(): Finished Spring Data repository scanning in 25 ms. Found 0 Redis repository interfaces.
2025-02-04 08:16:36,667 INFO  [main] o.s.b.w.e.t.TomcatWebServer.(): Tomcat initialized with port 8085 (http)
2025-02-04 08:16:36,677 INFO  [main] o.a.c.h.Http11NioProtocol.(): Initializing ProtocolHandler ["http-nio-8085"]
2025-02-04 08:16:36,682 INFO  [main] o.a.c.c.StandardService.(): Starting service [Tomcat]
2025-02-04 08:16:36,682 INFO  [main] o.a.c.c.StandardEngine.(): Starting Servlet engine: [Apache Tomcat/10.1.31]
2025-02-04 08:16:36,742 INFO  [main] o.a.c.c.C.[.[.[/].(): Initializing Spring embedded WebApplicationContext
2025-02-04 08:16:36,743 INFO  [main] o.s.b.w.s.c.ServletWebServerApplicationContext.(): Root WebApplicationContext: initialization completed in 1419 ms
2025-02-04 08:16:38,454 INFO  [main] c.l.b.d.h.f.PermissionOrRoleFactory.(): 装配 PermissionOrRoleFactory 工厂咯
2025-02-04 08:16:38,459 INFO  [main] c.l.b.d.h.f.PermissionOrRoleFactory.(): PermissionOrRoleFactory 初始化完成，包含 2 个 handler
2025-02-04 08:16:38,563 INFO  [main] o.s.b.a.w.s.WelcomePageHandlerMapping.(): Adding welcome page template: index
2025-02-04 08:16:39,814 INFO  [main] o.a.c.h.Http11NioProtocol.(): Starting ProtocolHandler ["http-nio-8085"]
2025-02-04 08:16:39,828 INFO  [main] o.s.b.w.e.t.TomcatWebServer.(): Tomcat started on port 8085 (http) with context path '/'
2025-02-04 08:16:39,835 INFO  [main] c.l.b.BlogApplication.(): Started BlogApplication in 5.009 seconds (process running for 8.769)
2025-02-04 08:17:05,241 INFO  [http-nio-8085-exec-1] o.a.c.c.C.[.[.[/].(): Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-02-04 08:17:05,241 INFO  [http-nio-8085-exec-1] o.s.w.s.DispatcherServlet.(): Initializing Servlet 'dispatcherServlet'
2025-02-04 08:17:05,242 INFO  [http-nio-8085-exec-1] o.s.w.s.DispatcherServlet.(): Completed initialization in 1 ms
2025-02-04 08:17:05,272 INFO  [http-nio-8085-exec-1] c.l.b.a.c.i.StatisticsAccessInterfaceTimeInterceptor.(): [96m>>>> 收到请求 - URI: /doc.html Method: GET Params: {}[0m
2025-02-04 08:17:05,323 INFO  [http-nio-8085-exec-2] c.l.b.a.c.i.StatisticsAccessInterfaceTimeInterceptor.(): [96m>>>> 收到请求 - URI: /webjars/css/app.8a48e86b.css Method: GET Params: {}[0m
2025-02-04 08:17:05,326 INFO  [http-nio-8085-exec-3] c.l.b.a.c.i.StatisticsAccessInterfaceTimeInterceptor.(): [96m>>>> 收到请求 - URI: /webjars/css/chunk-vendors.f24a310a.css Method: GET Params: {}[0m
2025-02-04 08:17:05,328 INFO  [http-nio-8085-exec-5] c.l.b.a.c.i.StatisticsAccessInterfaceTimeInterceptor.(): [96m>>>> 收到请求 - URI: /webjars/js/chunk-vendors.d51cf6f8.js Method: GET Params: {}[0m
2025-02-04 08:17:05,328 INFO  [http-nio-8085-exec-4] c.l.b.a.c.i.StatisticsAccessInterfaceTimeInterceptor.(): [96m>>>> 收到请求 - URI: /webjars/js/app.b0c0d7df.js Method: GET Params: {}[0m
2025-02-04 08:17:05,328 INFO  [http-nio-8085-exec-7] c.l.b.a.c.i.StatisticsAccessInterfaceTimeInterceptor.(): [96m>>>> 收到请求 - URI: /webjars/css/chunk-d7d5f59c.a9ffbfcb.css Method: GET Params: {}[0m
2025-02-04 08:17:05,329 INFO  [http-nio-8085-exec-6] c.l.b.a.c.i.StatisticsAccessInterfaceTimeInterceptor.(): [96m>>>> 收到请求 - URI: /webjars/css/chunk-75464e7e.8fb93ba5.css Method: GET Params: {}[0m
2025-02-04 08:17:05,365 INFO  [http-nio-8085-exec-8] c.l.b.a.c.i.StatisticsAccessInterfaceTimeInterceptor.(): [96m>>>> 收到请求 - URI: /webjars/js/chunk-069eb437.355c4fb0.js Method: GET Params: {}[0m
2025-02-04 08:17:05,367 INFO  [http-nio-8085-exec-9] c.l.b.a.c.i.StatisticsAccessInterfaceTimeInterceptor.(): [96m>>>> 收到请求 - URI: /webjars/js/chunk-0d102d5a.b2bddffc.js Method: GET Params: {}[0m
2025-02-04 08:17:05,373 INFO  [http-nio-8085-exec-10] c.l.b.a.c.i.StatisticsAccessInterfaceTimeInterceptor.(): [96m>>>> 收到请求 - URI: /webjars/js/chunk-0fd67716.d57e2c41.js Method: GET Params: {}[0m
2025-02-04 08:17:05,379 INFO  [http-nio-8085-exec-9] c.l.b.a.c.i.StatisticsAccessInterfaceTimeInterceptor.(): [96m>>>> 收到请求 - URI: /webjars/js/chunk-260d712a.390177fe.js Method: GET Params: {}[0m
2025-02-04 08:17:05,380 INFO  [http-nio-8085-exec-1] c.l.b.a.c.i.StatisticsAccessInterfaceTimeInterceptor.(): [96m>>>> 收到请求 - URI: /webjars/js/chunk-2d0af44e.392afcd6.js Method: GET Params: {}[0m
2025-02-04 08:17:05,386 INFO  [http-nio-8085-exec-3] c.l.b.a.c.i.StatisticsAccessInterfaceTimeInterceptor.(): [96m>>>> 收到请求 - URI: /webjars/js/chunk-2d0da532.591ad7fc.js Method: GET Params: {}[0m
2025-02-04 08:17:05,387 INFO  [http-nio-8085-exec-2] c.l.b.a.c.i.StatisticsAccessInterfaceTimeInterceptor.(): [96m>>>> 收到请求 - URI: /webjars/js/chunk-2d0bd799.eb48b7f1.js Method: GET Params: {}[0m
2025-02-04 08:17:05,392 INFO  [http-nio-8085-exec-4] c.l.b.a.c.i.StatisticsAccessInterfaceTimeInterceptor.(): [96m>>>> 收到请求 - URI: /webjars/js/chunk-3ec4aaa8.a79d19f8.js Method: GET Params: {}[0m
2025-02-04 08:17:05,392 INFO  [http-nio-8085-exec-6] c.l.b.a.c.i.StatisticsAccessInterfaceTimeInterceptor.(): [96m>>>> 收到请求 - URI: /webjars/js/chunk-3b888a65.8737ce4f.js Method: GET Params: {}[0m
2025-02-04 08:17:05,395 INFO  [http-nio-8085-exec-8] c.l.b.a.c.i.StatisticsAccessInterfaceTimeInterceptor.(): [96m>>>> 收到请求 - URI: /webjars/js/chunk-589faee0.5bfd1708.js Method: GET Params: {}[0m
2025-02-04 08:17:05,395 INFO  [http-nio-8085-exec-7] c.l.b.a.c.i.StatisticsAccessInterfaceTimeInterceptor.(): [96m>>>> 收到请求 - URI: /webjars/js/chunk-735c675c.5b409314.js Method: GET Params: {}[0m
2025-02-04 08:17:05,403 INFO  [http-nio-8085-exec-1] c.l.b.a.c.i.StatisticsAccessInterfaceTimeInterceptor.(): [96m>>>> 收到请求 - URI: /webjars/js/chunk-75464e7e.b130271b.js Method: GET Params: {}[0m
2025-02-04 08:17:05,405 INFO  [http-nio-8085-exec-10] c.l.b.a.c.i.StatisticsAccessInterfaceTimeInterceptor.(): [96m>>>> 收到请求 - URI: /webjars/js/chunk-adb9e944.2c7f24fe.js Method: GET Params: {}[0m
2025-02-04 08:17:05,405 INFO  [http-nio-8085-exec-3] c.l.b.a.c.i.StatisticsAccessInterfaceTimeInterceptor.(): [96m>>>> 收到请求 - URI: /webjars/js/chunk-d7d5f59c.e61130f3.js Method: GET Params: {}[0m
2025-02-04 08:17:05,618 INFO  [http-nio-8085-exec-2] c.l.b.a.c.i.StatisticsAccessInterfaceTimeInterceptor.(): [96m>>>> 收到请求 - URI: /v3/api-docs/swagger-config Method: GET Params: {}[0m
2025-02-04 08:17:05,673 INFO  [http-nio-8085-exec-2] c.l.b.a.c.i.StatisticsAccessInterfaceTime.(): [94m>>> 执行了：55毫秒[0m
2025-02-04 08:17:05,722 INFO  [http-nio-8085-exec-6] c.l.b.a.c.i.StatisticsAccessInterfaceTimeInterceptor.(): [96m>>>> 收到请求 - URI: /v3/api-docs/%E5%8D%9A%E5%AE%A2%E4%B8%BB%E4%BD%93%E9%80%BB%E8%BE%91%E6%A8%A1%E5%9D%97 Method: GET Params: {}[0m
2025-02-04 08:17:06,191 INFO  [http-nio-8085-exec-6] o.s.a.AbstractOpenApiResource.(): Init duration for springdoc-openapi is: 454 ms
2025-02-04 08:17:06,217 INFO  [http-nio-8085-exec-6] c.l.b.a.c.i.StatisticsAccessInterfaceTime.(): [94m>>> 执行了：495毫秒[0m
2025-02-04 08:18:03,885 INFO  [http-nio-8085-exec-8] c.l.b.a.c.i.StatisticsAccessInterfaceTimeInterceptor.(): [96m>>>> 收到请求 - URI: /v3/api-docs/%E9%82%AE%E7%AE%B1%E6%A8%A1%E5%9D%97 Method: GET Params: {}[0m
2025-02-04 08:18:04,008 INFO  [http-nio-8085-exec-8] o.s.a.AbstractOpenApiResource.(): Init duration for springdoc-openapi is: 121 ms
2025-02-04 08:18:04,009 INFO  [http-nio-8085-exec-8] c.l.b.a.c.i.StatisticsAccessInterfaceTime.(): [94m>>> 执行了：124毫秒[0m
2025-02-04 08:18:25,663 INFO  [http-nio-8085-exec-5] c.l.b.a.c.i.StatisticsAccessInterfaceTimeInterceptor.(): [96m>>>> 收到请求 - URI: /email/captcha/sender/599642769@qq.com Method: GET Params: {}[0m
2025-02-04 08:18:26,776 INFO  [http-nio-8085-exec-5] c.l.b.c.u.RedisUtils.(): Redis设置key: 599642769@qq.com 成功，过期时间: 3 MINUTES
2025-02-04 08:18:28,751 WARN  [http-nio-8085-exec-5] c.l.b.a.c.i.StatisticsAccessInterfaceTime.(): [93m执行时间过长：3088毫秒[0m
2025-02-04 08:19:15,215 INFO  [http-nio-8085-exec-1] c.l.b.a.c.i.StatisticsAccessInterfaceTimeInterceptor.(): [96m>>>> 收到请求 - URI: /user/register Method: POST Params: {}[0m
2025-02-04 08:19:15,570 INFO  [http-nio-8085-exec-1] c.l.b.a.c.c.UserRegisterController.(): UserRegisterController.register.BlogUserRegisterDto:{"captcha":"625389","email":"599642769@qq.com","nickName":"测试监听注册事件","password":"123456","sex":0}
2025-02-04 08:19:15,578 INFO  [http-nio-8085-exec-1] c.l.b.c.u.RedisUtils.(): Redis获取key: 599642769@qq.com 成功
2025-02-04 08:19:15,622 INFO  [http-nio-8085-exec-1] BLOG-SYSTEM-SQL.(): [93m>>>> 参数 = BlogUser(id=null, email=599642769@qq.com, sex=null, userName=null, nickName=null, password=null, createTime=null, updateTime=null, isDeleted=null, avatar=null)[0m
2025-02-04 08:19:15,622 INFO  [http-nio-8085-exec-1] BLOG-SYSTEM-SQL.(): [93m>>>> 调用方法 = com.lj.blog.infra.basic.dao.BlogUserDao.queryPrimary[0m
2025-02-04 08:19:15,622 INFO  [http-nio-8085-exec-1] BLOG-SYSTEM-SQL.(): [93m>>>> 使用的完整的SQL:
select * from blog_user WHERE email = '599642769@qq.com'[0m
2025-02-04 08:19:15,699 INFO  [http-nio-8085-exec-1] c.a.d.p.DruidDataSource.(): {dataSource-1} inited
2025-02-04 08:19:15,907 INFO  [http-nio-8085-exec-1] BLOG-SYSTEM-SQL.(): [32mSQL 执行时间:
2025-02-04 08:19:15,907 INFO  [http-nio-8085-exec-1] BLOG-SYSTEM-SQL.(): 方法: query
2025-02-04 08:19:15,907 INFO  [http-nio-8085-exec-1] BLOG-SYSTEM-SQL.(): 执行时间: 282 ms
2025-02-04 08:19:15,907 INFO  [http-nio-8085-exec-1] BLOG-SYSTEM-SQL.(): ========================================[0m
2025-02-04 08:19:16,134 INFO  [http-nio-8085-exec-1] BLOG-SYSTEM-SQL.(): [93m>>>> 参数 = BlogUser(id=null, email=599642769@qq.com, sex=0, userName=止于春山_1886570179098427392, nickName=测试监听注册事件, password=123456, createTime=Tue Feb 04 08:19:15 CST 2025, updateTime=Tue Feb 04 08:19:15 CST 2025, isDeleted=0, avatar=null)[0m
2025-02-04 08:19:16,134 INFO  [http-nio-8085-exec-1] BLOG-SYSTEM-SQL.(): [93m>>>> 调用方法 = com.lj.blog.infra.basic.dao.BlogUserDao.insert[0m
2025-02-04 08:19:16,135 INFO  [http-nio-8085-exec-1] BLOG-SYSTEM-SQL.(): [93m>>>> 使用的完整的SQL:
insert into blog_user(email, sex, user_name, nick_name, create_time, update_time, is_deleted, passw ord, avatar) values ('599642769@qq.com', 0, '止于春山_1886570179098427392', '测试监听注册事件', '2025年2月4日 上午8:19:16', '2025年2月4日 上午8:19:16', 0, '123456'), NULL[0m
2025-02-04 08:19:16,159 INFO  [http-nio-8085-exec-1] BLOG-SYSTEM-SQL.(): [32mSQL 执行时间:
2025-02-04 08:19:16,159 INFO  [http-nio-8085-exec-1] BLOG-SYSTEM-SQL.(): 方法: update
2025-02-04 08:19:16,159 INFO  [http-nio-8085-exec-1] BLOG-SYSTEM-SQL.(): 执行时间: 23 ms
2025-02-04 08:19:16,159 INFO  [http-nio-8085-exec-1] BLOG-SYSTEM-SQL.(): ========================================[0m
2025-02-04 08:19:16,286 INFO  [http-nio-8085-exec-1] c.l.b.a.c.c.UserRegisterController.(): [91m注册普通用户失败 com.lj.blog.common.exception.exceptions.BusinessException: 用户注册失败 用户注册失败[0m
2025-02-04 08:19:16,286 WARN  [http-nio-8085-exec-1] c.l.b.a.c.i.StatisticsAccessInterfaceTime.(): [93m执行时间过长：1071毫秒[0m
2025-02-04 08:22:20,525 INFO  [SpringApplicationShutdownHook] c.a.d.p.DruidDataSource.(): {dataSource-1} closing ...
2025-02-04 08:22:20,528 INFO  [SpringApplicationShutdownHook] c.a.d.p.DruidDataSource.(): {dataSource-1} closed
2025-02-04 08:22:26,065 INFO  [background-preinit] o.h.v.i.u.Version.(): HV000001: Hibernate Validator 8.0.1.Final
2025-02-04 08:22:26,091 INFO  [main] c.l.b.BlogApplication.(): Starting BlogApplication using Java 17.0.5 with PID 35896 (G:\SpringBootProduct\Blog\lj-blog-starter\target\classes started by PC in G:\SpringBootProduct\Blog)
2025-02-04 08:22:26,093 INFO  [main] c.l.b.BlogApplication.(): No active profile set, falling back to 1 default profile: "default"
2025-02-04 08:22:26,220 WARN  [main] o.s.c.a.AnnotationTypeMapping.(): Support for convention-based annotation attribute overrides is deprecated and will be removed in Spring Framework 6.2. Please annotate the following attributes in @com.lj.blog.common.annotation.SaUserCheckPermission with appropriate @AliasFor declarations: [mode, orRole]
2025-02-04 08:22:26,250 WARN  [main] o.s.c.a.AnnotationTypeMapping.(): Support for convention-based annotation attribute overrides is deprecated and will be removed in Spring Framework 6.2. Please annotate the following attributes in @cn.hutool.core.annotation.AliasFor with appropriate @AliasFor declarations: [annotation, attribute]
2025-02-04 08:22:26,818 INFO  [main] o.s.d.r.c.RepositoryConfigurationDelegate.(): Multiple Spring Data modules found, entering strict repository configuration mode
2025-02-04 08:22:26,822 INFO  [main] o.s.d.r.c.RepositoryConfigurationDelegate.(): Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-02-04 08:22:26,875 INFO  [main] o.s.d.r.c.RepositoryConfigurationDelegate.(): Finished Spring Data repository scanning in 37 ms. Found 0 Redis repository interfaces.
2025-02-04 08:22:27,522 INFO  [main] o.s.b.w.e.t.TomcatWebServer.(): Tomcat initialized with port 8085 (http)
2025-02-04 08:22:27,532 INFO  [main] o.a.c.h.Http11NioProtocol.(): Initializing ProtocolHandler ["http-nio-8085"]
2025-02-04 08:22:27,539 INFO  [main] o.a.c.c.StandardService.(): Starting service [Tomcat]
2025-02-04 08:22:27,539 INFO  [main] o.a.c.c.StandardEngine.(): Starting Servlet engine: [Apache Tomcat/10.1.31]
2025-02-04 08:22:27,604 INFO  [main] o.a.c.c.C.[.[.[/].(): Initializing Spring embedded WebApplicationContext
2025-02-04 08:22:27,604 INFO  [main] o.s.b.w.s.c.ServletWebServerApplicationContext.(): Root WebApplicationContext: initialization completed in 1480 ms
2025-02-04 08:22:29,492 INFO  [main] c.l.b.d.h.f.PermissionOrRoleFactory.(): 装配 PermissionOrRoleFactory 工厂咯
2025-02-04 08:22:29,497 INFO  [main] c.l.b.d.h.f.PermissionOrRoleFactory.(): PermissionOrRoleFactory 初始化完成，包含 2 个 handler
2025-02-04 08:22:29,607 INFO  [main] o.s.b.a.w.s.WelcomePageHandlerMapping.(): Adding welcome page template: index
2025-02-04 08:22:30,703 INFO  [main] o.a.c.h.Http11NioProtocol.(): Starting ProtocolHandler ["http-nio-8085"]
2025-02-04 08:22:30,719 INFO  [main] o.s.b.w.e.t.TomcatWebServer.(): Tomcat started on port 8085 (http) with context path '/'
2025-02-04 08:22:30,725 INFO  [main] c.l.b.BlogApplication.(): Started BlogApplication in 4.967 seconds (process running for 8.573)
2025-02-04 08:22:34,841 INFO  [SpringApplicationShutdownHook] c.a.d.p.DruidDataSource.(): {dataSource-0} closing ...
2025-02-04 08:22:40,349 INFO  [background-preinit] o.h.v.i.u.Version.(): HV000001: Hibernate Validator 8.0.1.Final
2025-02-04 08:22:40,376 INFO  [main] c.l.b.BlogApplication.(): Starting BlogApplication using Java 17.0.5 with PID 6484 (G:\SpringBootProduct\Blog\lj-blog-starter\target\classes started by PC in G:\SpringBootProduct\Blog)
2025-02-04 08:22:40,379 INFO  [main] c.l.b.BlogApplication.(): No active profile set, falling back to 1 default profile: "default"
2025-02-04 08:22:40,516 WARN  [main] o.s.c.a.AnnotationTypeMapping.(): Support for convention-based annotation attribute overrides is deprecated and will be removed in Spring Framework 6.2. Please annotate the following attributes in @com.lj.blog.common.annotation.SaUserCheckPermission with appropriate @AliasFor declarations: [mode, orRole]
2025-02-04 08:22:40,558 WARN  [main] o.s.c.a.AnnotationTypeMapping.(): Support for convention-based annotation attribute overrides is deprecated and will be removed in Spring Framework 6.2. Please annotate the following attributes in @cn.hutool.core.annotation.AliasFor with appropriate @AliasFor declarations: [annotation, attribute]
2025-02-04 08:22:41,093 INFO  [main] o.s.d.r.c.RepositoryConfigurationDelegate.(): Multiple Spring Data modules found, entering strict repository configuration mode
2025-02-04 08:22:41,095 INFO  [main] o.s.d.r.c.RepositoryConfigurationDelegate.(): Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-02-04 08:22:41,135 INFO  [main] o.s.d.r.c.RepositoryConfigurationDelegate.(): Finished Spring Data repository scanning in 27 ms. Found 0 Redis repository interfaces.
2025-02-04 08:22:41,606 INFO  [main] o.s.b.w.e.t.TomcatWebServer.(): Tomcat initialized with port 8085 (http)
2025-02-04 08:22:41,614 INFO  [main] o.a.c.h.Http11NioProtocol.(): Initializing ProtocolHandler ["http-nio-8085"]
2025-02-04 08:22:41,617 INFO  [main] o.a.c.c.StandardService.(): Starting service [Tomcat]
2025-02-04 08:22:41,617 INFO  [main] o.a.c.c.StandardEngine.(): Starting Servlet engine: [Apache Tomcat/10.1.31]
2025-02-04 08:22:41,671 INFO  [main] o.a.c.c.C.[.[.[/].(): Initializing Spring embedded WebApplicationContext
2025-02-04 08:22:41,673 INFO  [main] o.s.b.w.s.c.ServletWebServerApplicationContext.(): Root WebApplicationContext: initialization completed in 1262 ms
2025-02-04 08:22:43,402 INFO  [main] c.l.b.d.h.f.PermissionOrRoleFactory.(): 装配 PermissionOrRoleFactory 工厂咯
2025-02-04 08:22:43,409 INFO  [main] c.l.b.d.h.f.PermissionOrRoleFactory.(): PermissionOrRoleFactory 初始化完成，包含 2 个 handler
2025-02-04 08:22:43,552 INFO  [main] o.s.b.a.w.s.WelcomePageHandlerMapping.(): Adding welcome page template: index
2025-02-04 08:22:44,634 INFO  [main] o.a.c.h.Http11NioProtocol.(): Starting ProtocolHandler ["http-nio-8085"]
2025-02-04 08:22:44,646 INFO  [main] o.s.b.w.e.t.TomcatWebServer.(): Tomcat started on port 8085 (http) with context path '/'
2025-02-04 08:22:44,652 INFO  [main] c.l.b.BlogApplication.(): Started BlogApplication in 4.606 seconds (process running for 8.532)
2025-02-04 08:22:58,300 INFO  [http-nio-8085-exec-1] o.a.c.c.C.[.[.[/].(): Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-02-04 08:22:58,300 INFO  [http-nio-8085-exec-1] o.s.w.s.DispatcherServlet.(): Initializing Servlet 'dispatcherServlet'
2025-02-04 08:22:58,302 INFO  [http-nio-8085-exec-1] o.s.w.s.DispatcherServlet.(): Completed initialization in 2 ms
2025-02-04 08:22:58,342 INFO  [http-nio-8085-exec-1] c.l.b.a.c.i.StatisticsAccessInterfaceTimeInterceptor.(): [96m>>>> 收到请求 - URI: /user/register Method: POST Params: {}[0m
2025-02-04 08:22:58,651 INFO  [http-nio-8085-exec-1] c.l.b.a.c.c.UserRegisterController.(): UserRegisterController.register.BlogUserRegisterDto:{"captcha":"625389","email":"599642769@qq.com","nickName":"测试监听注册事件","password":"123456","sex":0}
2025-02-04 08:22:59,581 INFO  [http-nio-8085-exec-1] c.l.b.c.u.RedisUtils.(): Redis获取key: 599642769@qq.com 成功
2025-02-04 08:22:59,602 WARN  [http-nio-8085-exec-1] c.l.b.a.c.i.StatisticsAccessInterfaceTime.(): [93m执行时间过长：1263毫秒[0m
2025-02-04 08:23:54,057 INFO  [http-nio-8085-exec-2] c.l.b.a.c.i.StatisticsAccessInterfaceTimeInterceptor.(): [96m>>>> 收到请求 - URI: /email/captcha/sender/599642769@qq.com Method: GET Params: {}[0m
2025-02-04 08:23:54,080 INFO  [http-nio-8085-exec-2] c.l.b.c.u.RedisUtils.(): Redis设置key: 599642769@qq.com 成功，过期时间: 3 MINUTES
2025-02-04 08:23:55,193 WARN  [http-nio-8085-exec-2] c.l.b.a.c.i.StatisticsAccessInterfaceTime.(): [93m执行时间过长：1136毫秒[0m
2025-02-04 08:24:14,004 INFO  [http-nio-8085-exec-5] c.l.b.a.c.i.StatisticsAccessInterfaceTimeInterceptor.(): [96m>>>> 收到请求 - URI: /user/register Method: POST Params: {}[0m
2025-02-04 08:24:14,005 INFO  [http-nio-8085-exec-5] c.l.b.a.c.c.UserRegisterController.(): UserRegisterController.register.BlogUserRegisterDto:{"captcha":"794385","email":"599642769@qq.com","nickName":"测试监听注册事件","password":"123456","sex":0}
2025-02-04 08:24:14,022 INFO  [http-nio-8085-exec-5] c.l.b.c.u.RedisUtils.(): Redis获取key: 599642769@qq.com 成功
2025-02-04 08:24:14,077 INFO  [http-nio-8085-exec-5] BLOG-SYSTEM-SQL.(): [93m>>>> 参数 = BlogUser(id=null, email=599642769@qq.com, sex=null, userName=null, nickName=null, password=null, createTime=null, updateTime=null, isDeleted=null, avatar=null)[0m
2025-02-04 08:24:14,077 INFO  [http-nio-8085-exec-5] BLOG-SYSTEM-SQL.(): [93m>>>> 调用方法 = com.lj.blog.infra.basic.dao.BlogUserDao.queryPrimary[0m
2025-02-04 08:24:14,078 INFO  [http-nio-8085-exec-5] BLOG-SYSTEM-SQL.(): [93m>>>> 使用的完整的SQL:
select * from blog_user WHERE email = '599642769@qq.com'[0m
2025-02-04 08:24:14,162 INFO  [http-nio-8085-exec-5] c.a.d.p.DruidDataSource.(): {dataSource-1} inited
2025-02-04 08:24:14,394 INFO  [http-nio-8085-exec-5] BLOG-SYSTEM-SQL.(): [32mSQL 执行时间:
2025-02-04 08:24:14,394 INFO  [http-nio-8085-exec-5] BLOG-SYSTEM-SQL.(): 方法: query
2025-02-04 08:24:14,394 INFO  [http-nio-8085-exec-5] BLOG-SYSTEM-SQL.(): 执行时间: 314 ms
2025-02-04 08:24:14,394 INFO  [http-nio-8085-exec-5] BLOG-SYSTEM-SQL.(): ========================================[0m
2025-02-04 08:24:32,963 INFO  [http-nio-8085-exec-5] BLOG-SYSTEM-SQL.(): [93m>>>> 参数 = BlogUser(id=null, email=599642769@qq.com, sex=0, userName=止于春山_1886571431064543232, nickName=测试监听注册事件, password=123456, createTime=Tue Feb 04 08:24:14 CST 2025, updateTime=Tue Feb 04 08:24:14 CST 2025, isDeleted=0, avatar=null)[0m
2025-02-04 08:24:32,963 INFO  [http-nio-8085-exec-5] BLOG-SYSTEM-SQL.(): [93m>>>> 调用方法 = com.lj.blog.infra.basic.dao.BlogUserDao.insert[0m
2025-02-04 08:24:32,969 INFO  [http-nio-8085-exec-5] BLOG-SYSTEM-SQL.(): [93m>>>> 使用的完整的SQL:
insert into blog_user(email, sex, user_name, nick_name, create_time, update_time, is_deleted, passw ord, avatar) values ('599642769@qq.com', 0, '止于春山_1886571431064543232', '测试监听注册事件', '2025年2月4日 上午8:24:32', '2025年2月4日 上午8:24:32', 0, '123456'), NULL[0m
2025-02-04 08:24:33,017 INFO  [http-nio-8085-exec-5] BLOG-SYSTEM-SQL.(): [32mSQL 执行时间:
2025-02-04 08:24:33,017 INFO  [http-nio-8085-exec-5] BLOG-SYSTEM-SQL.(): 方法: update
2025-02-04 08:24:33,017 INFO  [http-nio-8085-exec-5] BLOG-SYSTEM-SQL.(): 执行时间: 46 ms
2025-02-04 08:24:33,017 INFO  [http-nio-8085-exec-5] BLOG-SYSTEM-SQL.(): ========================================[0m
2025-02-04 08:28:29,114 INFO  [http-nio-8085-exec-5] c.l.b.a.c.c.UserRegisterController.(): [91m注册普通用户失败 com.lj.blog.common.exception.exceptions.BusinessException: 用户注册失败 用户注册失败[0m
2025-02-04 08:28:29,115 WARN  [http-nio-8085-exec-5] c.l.b.a.c.i.StatisticsAccessInterfaceTime.(): [93m执行时间过长：255111毫秒[0m
2025-02-04 08:28:30,225 INFO  [SpringApplicationShutdownHook] c.a.d.p.DruidDataSource.(): {dataSource-1} closing ...
2025-02-04 08:28:30,229 INFO  [SpringApplicationShutdownHook] c.a.d.p.DruidDataSource.(): {dataSource-1} closed
