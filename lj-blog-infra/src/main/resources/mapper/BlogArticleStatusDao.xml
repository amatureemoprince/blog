<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lj.blog.infra.basic.dao.BlogArticleStatusDao">

    <resultMap type="com.lj.blog.infra.basic.entity.BlogArticleStatus" id="BlogArticleStatusMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="articleId" column="article_id" jdbcType="INTEGER"/>
        <result property="views" column="views" jdbcType="INTEGER"/>
        <result property="likes" column="likes" jdbcType="INTEGER"/>
        <result property="comments" column="comments" jdbcType="INTEGER"/>
        <result property="collections" column="collections" jdbcType="INTEGER"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="BlogArticleStatusMap">
        select
id, article_id, views, likes, comments, collections, update_time
        from blog_article_status
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="BlogArticleStatusMap">
        select
id, article_id, views, likes, comments, collections, update_time
        from blog_article_status
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="articleId != null">
                and article_id = #{articleId}
            </if>
            <if test="views != null">
                and views = #{views}
            </if>
            <if test="likes != null">
                and likes = #{likes}
            </if>
            <if test="comments != null">
                and comments = #{comments}
            </if>
            <if test="collections != null">
                and collections = #{collections}
            </if>
            <if test="updateTime != null">
                and update_time = #{updateTime}
            </if>
        </where>
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>

    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from blog_article_status
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="articleId != null">
                and article_id = #{articleId}
            </if>
            <if test="views != null">
                and views = #{views}
            </if>
            <if test="likes != null">
                and likes = #{likes}
            </if>
            <if test="comments != null">
                and comments = #{comments}
            </if>
            <if test="collections != null">
                and collections = #{collections}
            </if>
            <if test="updateTime != null">
                and update_time = #{updateTime}
            </if>
        </where>
    </select>
    <select id="queryPrimary" resultType="com.lj.blog.infra.basic.entity.BlogArticleStatus"
            parameterType="com.lj.blog.infra.basic.entity.BlogArticleStatus">
        select *
        from blog_article_status
        <where>
            <if test="id != null and id != ''">
                and id = #{id}
            </if>
            <if test="articleId != null and articleId != ''">
                and article_id = #{articleId}
            </if>
            <if test="views != null and views != ''">
                and views = #{views}
            </if>
            <if test="likes != null and likes != ''">
                and likes = #{likes}
            </if>
            <if test="comments != null and comments != ''">
                and comments = #{comments}
            </if>
            <if test="collections != null and collections != ''">
                and collections = #{collections}
            </if>
            <if test="updateTime != null and updateTime != ''">
                and update_time = #{updateTime}
            </if>
        </where>
    </select>
    <select id="queryByIds" resultType="com.lj.blog.infra.basic.entity.BlogArticleStatus">
        select *
        from blog_article_status
        where id in
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into blog_article_status(article_id, views, likes, comments, collections, update_time)
        values (#{articleId}, #{views}, #{likes}, #{comments}, #{collections}, #{updateTime})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into blog_article_status(article_id, views, likes, comments, collections, update_time)
        values
        <foreach collection="entities" item="entity" separator=",">
        (#{entity.articleId}, #{entity.views}, #{entity.likes}, #{entity.comments}, #{entity.collections}, #{entity.updateTime})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into blog_article_status(article_id, views, likes, comments, collections, update_time)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.articleId}, #{entity.views}, #{entity.likes}, #{entity.comments}, #{entity.collections}, #{entity.updateTime})
        </foreach>
        on duplicate key update
article_id = values(article_id),
views = values(views),
likes = values(likes),
comments = values(comments),
collections = values(collections),
update_time = values(update_time)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update blog_article_status
        <set>
            <if test="articleId != null">
                article_id = #{articleId},
            </if>
            <if test="views != null">
                views = #{views},
            </if>
            <if test="likes != null">
                likes = #{likes},
            </if>
            <if test="comments != null">
                comments = #{comments},
            </if>
            <if test="collections != null">
                collections = #{collections},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from blog_article_status where id = #{id}
    </delete>

</mapper>

