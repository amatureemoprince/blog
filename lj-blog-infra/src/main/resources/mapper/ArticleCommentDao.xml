<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lj.blog.infra.basic.mapper.ArticleCommentDao">

    <resultMap type="com.lj.blog.infra.basic.entity.ArticleComment" id="ArticleCommentMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="articleId" column="article_id" jdbcType="INTEGER"/>
        <result property="userId" column="user_id" jdbcType="INTEGER"/>
        <result property="commentContent" column="comment_content" jdbcType="VARCHAR"/>
        <result property="parentId" column="parent_id" jdbcType="INTEGER"/>
        <result property="replyUserId" column="reply_user_id" jdbcType="INTEGER"/>
        <result property="rootId" column="root_id" jdbcType="INTEGER"/>
        <result property="likeCount" column="like_count" jdbcType="INTEGER"/>
        <result property="status" column="status" jdbcType="INTEGER"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
        <result property="isDeleted" column="is_deleted" jdbcType="INTEGER"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="ArticleCommentMap">
        select
id, article_id, user_id, comment_content, parent_id, reply_user_id, root_id, like_count, status, create_time, update_time, is_deleted
        from article_comment
        where id = #{id}
    </select>

    <!--查询指定行数据-->


    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from article_comment
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="articleId != null">
                and article_id = #{articleId}
            </if>
            <if test="userId != null">
                and user_id = #{userId}
            </if>
            <if test="commentContent != null and commentContent != ''">
                and comment_content = #{commentContent}
            </if>
            <if test="parentId != null">
                and parent_id = #{parentId}
            </if>
            <if test="replyUserId != null">
                and reply_user_id = #{replyUserId}
            </if>
            <if test="rootId != null">
                and root_id = #{rootId}
            </if>
            <if test="likeCount != null">
                and like_count = #{likeCount}
            </if>
            <if test="status != null">
                and status = #{status}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
            <if test="updateTime != null">
                and update_time = #{updateTime}
            </if>
            <if test="isDeleted != null">
                and is_deleted = #{isDeleted}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into article_comment(article_id, user_id, comment_content, parent_id, reply_user_id, root_id, like_count, status, create_time, update_time, is_deleted)
        values (#{articleId}, #{userId}, #{commentContent}, #{parentId}, #{replyUserId}, #{rootId}, #{likeCount}, #{status}, #{createTime}, #{updateTime}, #{isDeleted})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into article_comment(article_id, user_id, comment_content, parent_id, reply_user_id, root_id, like_count, status, create_time, update_time, is_deleted)
        values
        <foreach collection="entities" item="entity" separator=",">
        (#{entity.articleId}, #{entity.userId}, #{entity.commentContent}, #{entity.parentId}, #{entity.replyUserId}, #{entity.rootId}, #{entity.likeCount}, #{entity.status}, #{entity.createTime}, #{entity.updateTime}, #{entity.isDeleted})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into article_comment(article_id, user_id, comment_content, parent_id, reply_user_id, root_id, like_count, status, create_time, update_time, is_deleted)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.articleId}, #{entity.userId}, #{entity.commentContent}, #{entity.parentId}, #{entity.replyUserId}, #{entity.rootId}, #{entity.likeCount}, #{entity.status}, #{entity.createTime}, #{entity.updateTime}, #{entity.isDeleted})
        </foreach>
        on duplicate key update
article_id = values(article_id),
user_id = values(user_id),
comment_content = values(comment_content),
parent_id = values(parent_id),
reply_user_id = values(reply_user_id),
root_id = values(root_id),
like_count = values(like_count),
status = values(status),
create_time = values(create_time),
update_time = values(update_time),
is_deleted = values(is_deleted)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update article_comment
        <set>
            <if test="articleId != null">
                article_id = #{articleId},
            </if>
            <if test="userId != null">
                user_id = #{userId},
            </if>
            <if test="commentContent != null and commentContent != ''">
                comment_content = #{commentContent},
            </if>
            <if test="parentId != null">
                parent_id = #{parentId},
            </if>
            <if test="replyUserId != null">
                reply_user_id = #{replyUserId},
            </if>
            <if test="rootId != null">
                root_id = #{rootId},
            </if>
            <if test="likeCount != null">
                like_count = #{likeCount},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
            <if test="isDeleted != null">
                is_deleted = #{isDeleted},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from article_comment where id = #{id}
    </delete>

</mapper>

